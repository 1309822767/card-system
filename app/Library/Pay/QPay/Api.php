<?php
namespace App\Library\Pay\QPay; use App\Library\Helper; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; require_once __DIR__ . '/qpay_mch_sp/qpayMchAPI.class.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($sp5d3f49) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp5d3f49; } function goPay($spc8c9ef, $sp4510be, $sp930bb6, $sp9a31c1, $spfa6477) { if (!isset($spc8c9ef['mch_id']) || !isset($spc8c9ef['mch_key'])) { throw new \Exception('请设置 mch_id 和 mch_key'); } $sp7c7a93 = array('out_trade_no' => $sp4510be, 'body' => $sp930bb6, 'device_info' => 'qq_19060', 'fee_type' => 'CNY', 'notify_url' => $this->url_notify, 'spbill_create_ip' => Helper::getIP(), 'total_fee' => $spfa6477, 'trade_type' => 'NATIVE'); $spf0279d = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi', null, 10); $sp11b133 = $spf0279d->req($sp7c7a93, $spc8c9ef); $sp820aff = \QpayMchUtil::xmlToArray($sp11b133); if (!isset($sp820aff['code_url'])) { Log::error('Pay.QPay.goPay, order_no:' . $sp4510be . ', error:' . json_encode($sp820aff)); if (isset($sp820aff['err_code_des'])) { throw new \Exception($sp820aff['err_code_des']); } if (isset($sp820aff['return_msg'])) { throw new \Exception($sp820aff['return_msg']); } throw new \Exception('获取支付数据失败'); } header('location: /qrcode/pay/' . $sp4510be . '/qq?url=' . urlencode($sp820aff['code_url'])); die; } function verify($spc8c9ef, $sp53cf01) { $sp412d81 = isset($spc8c9ef['isNotify']) && $spc8c9ef['isNotify']; $spf0279d = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_order_query.cgi', null, 10); if ($sp412d81) { $sp7c7a93 = $spf0279d->notify_params(); if (!$spf0279d->notify_verify($sp7c7a93, $spc8c9ef)) { echo '<xml><return_code>FAIL</return_code></xml>'; return false; } call_user_func_array($sp53cf01, array($sp7c7a93['out_trade_no'], $sp7c7a93['total_fee'], $sp7c7a93['transaction_id'])); echo '<xml><return_code>SUCCESS</return_code></xml>'; return true; } else { $sp4510be = @$spc8c9ef['out_trade_no']; $sp7c7a93 = array('out_trade_no' => $sp4510be); $sp11b133 = $spf0279d->req($sp7c7a93, $spc8c9ef); $sp820aff = \QpayMchUtil::xmlToArray($sp11b133); if (array_key_exists('trade_state', $sp820aff) && $sp820aff['trade_state'] == 'SUCCESS') { call_user_func_array($sp53cf01, array($sp820aff['out_trade_no'], $sp820aff['total_fee'], $sp820aff['transaction_id'])); return true; } else { return false; } } } }