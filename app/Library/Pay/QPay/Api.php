<?php
namespace App\Library\Pay\QPay; use App\Library\Helper; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; require_once __DIR__ . '/qpay_mch_sp/qpayMchAPI.class.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($spcbbf66) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spcbbf66; } function goPay($spc6bf93, $sp30c318, $spc3fe8b, $sp66faf9, $spb959ec) { if (!isset($spc6bf93['mch_id']) || !isset($spc6bf93['mch_key'])) { throw new \Exception('请设置 mch_id 和 mch_key'); } $sp342eea = array('out_trade_no' => $sp30c318, 'body' => $spc3fe8b, 'device_info' => 'qq_19060', 'fee_type' => 'CNY', 'notify_url' => $this->url_notify, 'spbill_create_ip' => Helper::getIP(), 'total_fee' => $spb959ec, 'trade_type' => 'NATIVE'); $spb9a9fd = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi', null, 10); $sp07c545 = $spb9a9fd->req($sp342eea, $spc6bf93); $spe62cd8 = \QpayMchUtil::xmlToArray($sp07c545); if (!isset($spe62cd8['code_url'])) { Log::error('Pay.QPay.goPay, order_no:' . $sp30c318 . ', error:' . json_encode($spe62cd8)); if (isset($spe62cd8['err_code_des'])) { throw new \Exception($spe62cd8['err_code_des']); } if (isset($spe62cd8['return_msg'])) { throw new \Exception($spe62cd8['return_msg']); } throw new \Exception('获取支付数据失败'); } header('location: /qrcode/pay/' . $sp30c318 . '/qq?url=' . urlencode($spe62cd8['code_url'])); die; } function verify($spc6bf93, $spc5d9aa) { $sp4dcba6 = isset($spc6bf93['isNotify']) && $spc6bf93['isNotify']; $spb9a9fd = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_order_query.cgi', null, 10); if ($sp4dcba6) { $sp342eea = $spb9a9fd->notify_params(); if (!$spb9a9fd->notify_verify($sp342eea, $spc6bf93)) { echo '<xml><return_code>FAIL</return_code></xml>'; return false; } call_user_func_array($spc5d9aa, array($sp342eea['out_trade_no'], $sp342eea['total_fee'], $sp342eea['transaction_id'])); echo '<xml><return_code>SUCCESS</return_code></xml>'; return true; } else { $sp30c318 = @$spc6bf93['out_trade_no']; $sp342eea = array('out_trade_no' => $sp30c318); $sp07c545 = $spb9a9fd->req($sp342eea, $spc6bf93); $spe62cd8 = \QpayMchUtil::xmlToArray($sp07c545); if (array_key_exists('trade_state', $spe62cd8) && $spe62cd8['trade_state'] == 'SUCCESS') { call_user_func_array($spc5d9aa, array($spe62cd8['out_trade_no'], $spe62cd8['total_fee'], $spe62cd8['transaction_id'])); return true; } else { return false; } } } }