<?php
require_once 'qpayMchUtil.class.php'; class QpayMchAPI { protected $url; protected $isSSL; protected $timeout; public function __construct($sp59c732, $sp056032, $spafc194 = 5) { $this->url = $sp59c732; $this->isSSL = $sp056032; $this->timeout = $spafc194; } public function notify_params() { $spa65db2 = file_get_contents('php://input'); return QpayMchUtil::xmlToArray($spa65db2); } public function notify_verify($sp7c7a93, $spc8c9ef) { if (!isset($sp7c7a93['sign'])) { return false; } $sp1e1df1 = QpayMchUtil::getSign($sp7c7a93, $spc8c9ef['mch_key']); return $sp1e1df1 === $sp7c7a93['sign']; } public function req($sp7c7a93, $spc8c9ef) { $sp6f1294 = array(); $sp7c7a93['mch_id'] = $spc8c9ef['mch_id']; $sp7c7a93['nonce_str'] = QpayMchUtil::createNoncestr(); $sp7c7a93['sign'] = QpayMchUtil::getSign($sp7c7a93, $spc8c9ef['mch_key']); $spa65db2 = QpayMchUtil::arrayToXml($sp7c7a93); if (isset($this->isSSL)) { $sp6f1294 = QpayMchUtil::reqByCurlSSLPost($spa65db2, $this->url, $this->timeout); } else { $sp6f1294 = QpayMchUtil::reqByCurlNormalPost($spa65db2, $this->url, $this->timeout); } return $sp6f1294; } }