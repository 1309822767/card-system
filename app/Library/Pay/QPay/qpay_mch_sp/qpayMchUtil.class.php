<?php
require_once 'qpayMch.config.php'; class QpayMchUtil { public static function createNoncestr($sp047f5a = 32) { $sp7e2a56 = 'abcdefghijklmnopqrstuvwxyz0123456789'; $sp4e169a = ''; for ($sp218d20 = 0; $sp218d20 < $sp047f5a; $sp218d20++) { $sp4e169a .= substr($sp7e2a56, mt_rand(0, strlen($sp7e2a56) - 1), 1); } return $sp4e169a; } public static function buildQueryStr($sp342eea) { $sp29481f = array(); foreach ($sp342eea as $sp783862 => $spce84f3) { if ($sp783862 != 'sign' && $spce84f3 != '' && !is_array($spce84f3)) { array_push($sp29481f, "{$sp783862}={$spce84f3}"); } } return implode('&', $sp29481f); } public static function getSign($sp342eea, $sp04cd49) { ksort($sp342eea); $spb3e9f5 = QpayMchUtil::buildQueryStr($sp342eea); $spb3e9f5 = $spb3e9f5 . '&key=' . $sp04cd49; $spb3e9f5 = md5($spb3e9f5); $spa0f4ca = strtoupper($spb3e9f5); return $spa0f4ca; } public static function arrayToXml($spc3a46d) { $sp60a70a = '<xml>'; foreach ($spc3a46d as $spc37b44 => $spfca62c) { if (is_numeric($spfca62c)) { $sp60a70a .= "<{$spc37b44}>{$spfca62c}</{$spc37b44}>"; } else { $sp60a70a .= "<{$spc37b44}><![CDATA[{$spfca62c}]]></{$spc37b44}>"; } } $sp60a70a .= '</xml>'; return $sp60a70a; } public static function xmlToArray($sp60a70a) { $spc3a46d = json_decode(json_encode(simplexml_load_string($sp60a70a, 'SimpleXMLElement', LIBXML_NOCDATA)), true); return $spc3a46d; } public static function reqByCurlNormalPost($sp342eea, $sp81923e, $sped125a = 10) { return QpayMchUtil::_reqByCurl($sp342eea, $sp81923e, $sped125a, false); } public static function reqByCurlSSLPost($sp342eea, $sp81923e, $sped125a = 10) { return QpayMchUtil::_reqByCurl($sp342eea, $sp81923e, $sped125a, true); } private static function _reqByCurl($sp342eea, $sp81923e, $sped125a = 10, $sp004088 = false) { $spd7a82f = curl_init(); curl_setopt($spd7a82f, CURLOPT_URL, $sp81923e); curl_setopt($spd7a82f, CURLOPT_TIMEOUT, $sped125a); curl_setopt($spd7a82f, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($spd7a82f, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($spd7a82f, CURLOPT_HEADER, FALSE); curl_setopt($spd7a82f, CURLOPT_RETURNTRANSFER, TRUE); if (isset($sp004088) && $sp004088 != false) { curl_setopt($spd7a82f, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($spd7a82f, CURLOPT_SSLCERT, QpayMchConf::CERT_FILE_PATH); curl_setopt($spd7a82f, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($spd7a82f, CURLOPT_SSLKEY, QpayMchConf::KEY_FILE_PATH); } curl_setopt($spd7a82f, CURLOPT_POST, true); curl_setopt($spd7a82f, CURLOPT_POSTFIELDS, $sp342eea); $sp567373 = curl_exec($spd7a82f); if ($sp567373) { curl_close($spd7a82f); return $sp567373; } else { $spd51c1c = curl_errno($spd7a82f); print_r($spd51c1c); curl_close($spd7a82f); return false; } } }