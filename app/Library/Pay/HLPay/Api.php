<?php
namespace App\Library\Pay\HLPay; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($sp5d3f49) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp5d3f49; $this->url_return = SYS_URL . '/pay/return/' . $sp5d3f49; } function goPay($spc8c9ef, $sp4510be, $sp930bb6, $sp9a31c1, $spfa6477) { $sp7918ab = sprintf('%.2f', $spfa6477 / 100); $sp2688c6 = $spc8c9ef['payway']; switch ($sp2688c6) { case '901': case '902': $spdae190 = 'wechat'; break; case '903': case '904': $spdae190 = 'aliqr'; break; default: throw new \Exception('支付渠道错误'); } $spbaa59b = SYS_URL . '/qrcode/pay/' . $sp4510be . '/query'; $sp7c7a93 = array('pay_memberid' => $spc8c9ef['id'], 'pay_orderid' => $sp4510be, 'pay_applydate' => date('Y-m-d H:i:s'), 'pay_bankcode' => $sp2688c6, 'pay_notifyurl' => $this->url_notify, 'pay_callbackurl' => $spbaa59b, 'pay_amount' => $sp7918ab, 'pay_productname' => $sp930bb6); $sp79a6d8 = $this->getPostData($sp7c7a93, $spc8c9ef['key']); $sp7025bb = $this->curl_post('http://henglpay.com/Pay_Index.html', $sp79a6d8); $sp6f1294 = @json_decode($sp7025bb, true); if (!$sp6f1294 || !isset($sp6f1294['status'])) { \Log::error('Pay.HLPay.goPay.order Error#1: ' . $sp7025bb); throw new \Exception('获取付款信息超时, 请刷新重试'); } if ($sp6f1294['status'] !== '200' || !isset($sp6f1294['data']['QRCodeUrl'])) { \Log::error('Pay.HLPay.goPay.order Error#2: ' . $sp7025bb); throw new \Exception('获取付款信息失败, 请联系客服反馈'); } if (@$sp6f1294['data']['type'] === 'qrcode') { header('location: /qrcode/pay/' . $sp4510be . '/' . strtolower($spdae190) . '?url=' . urlencode($sp6f1294['data']['QRCodeUrl'])); } elseif ($sp6f1294['type'] === 'page') { echo $sp6f1294['data']['QRCodeUrl']; } elseif ($sp6f1294['type'] === 'jsapi') { var_dump('未启用此方式: '); var_dump($sp6f1294['data']['QRCodeUrl']); } else { \Log::error('Pay.HLPay.goPay.order Error#3: ' . $sp7025bb); throw new \Exception('获取付款信息失败, 请联系客服反馈'); } die; } function verify($spc8c9ef, $sp53cf01) { $sp412d81 = isset($spc8c9ef['isNotify']) && $spc8c9ef['isNotify']; if ($sp412d81) { $spf0d30b = array('memberid', 'orderid', 'transaction_id', 'amount', 'datetime', 'returncode'); $sp7c7a93 = array(); foreach ($spf0d30b as $sp3fb6f5) { $sp7c7a93[$sp3fb6f5] = $_POST[$sp3fb6f5]; } if ($this->getSign($sp7c7a93, $spc8c9ef['key']) !== $_POST['sign']) { \Log::error('Pay.HLPay.verify, sign error $post:' . json_encode($_POST)); echo 'sign error'; return false; } $sp51ee1d = $_POST['orderid']; $sp5f8fd4 = $_POST['transaction_id']; $sp53cf01($sp51ee1d, (int) round($_POST['amount'] * 100), $sp5f8fd4); echo 'ok'; return true; } else { return false; } } private function getPostData($sp7c7a93, $sp1e4b49) { ksort($sp7c7a93); $sp98304c = array(); foreach ($sp7c7a93 as $spc57c89 => $sp2a00a3) { if ($sp2a00a3 !== '' && !is_array($sp2a00a3)) { array_push($sp98304c, "{$spc57c89}={$sp2a00a3}"); } } $sp7c7a93 = implode('&', $sp98304c); $sp4db745 = $sp7c7a93 . '&key=' . $sp1e4b49; return $sp7c7a93 . '&pay_md5sign=' . strtoupper(md5($sp4db745)); } private function getSign($sp7c7a93, $sp1e4b49) { ksort($sp7c7a93); $sp98304c = array(); foreach ($sp7c7a93 as $spc57c89 => $sp2a00a3) { if ($sp2a00a3 !== '' && !is_array($sp2a00a3)) { array_push($sp98304c, "{$spc57c89}={$sp2a00a3}"); } } $sp7c7a93 = implode('&', $sp98304c); $sp4db745 = $sp7c7a93 . '&key=' . $sp1e4b49; return strtoupper(md5($sp4db745)); } private function curl_post($sp59c732, $sp79a6d8 = '') { $sp43c518['Accept'] = '*/*'; $sp43c518['Referer'] = $sp59c732; $sp43c518['Content-Type'] = 'application/x-www-form-urlencoded'; $sp852727 = array(); foreach ($sp43c518 as $spee3819 => $sp53e898) { $sp852727[] = $spee3819 . ': ' . $sp53e898; } $sp72f257 = curl_init(); curl_setopt($sp72f257, CURLOPT_URL, $sp59c732); curl_setopt($sp72f257, CURLOPT_POST, 1); curl_setopt($sp72f257, CURLOPT_POSTFIELDS, $sp79a6d8); curl_setopt($sp72f257, CURLOPT_TIMEOUT, 10); curl_setopt($sp72f257, CURLOPT_CONNECTTIMEOUT, 10); curl_setopt($sp72f257, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp72f257, CURLOPT_HEADER, 1); curl_setopt($sp72f257, CURLOPT_SSL_VERIFYHOST, 0); curl_setopt($sp72f257, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($sp72f257, CURLOPT_HTTPHEADER, $sp852727); $sp31c557 = curl_exec($sp72f257); $sp816c80 = curl_getinfo($sp72f257, CURLINFO_HEADER_SIZE); $sp9a31c1 = substr($sp31c557, $sp816c80); curl_close($sp72f257); return $sp9a31c1; } }