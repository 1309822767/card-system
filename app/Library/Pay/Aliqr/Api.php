<?php
namespace App\Library\Pay\Aliqr; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; include 'Loader.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($spcbbf66) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spcbbf66; } private function defineConfig(&$spc6bf93) { $spc6bf93['sign_type'] = 'RSA2'; $spc6bf93['charset'] = 'UTF-8'; $spc6bf93['gatewayUrl'] = 'https://openapi.alipay.com/gateway.do'; $spc6bf93['MaxQueryRetry'] = '10'; $spc6bf93['QueryDuration'] = '3'; $spc6bf93['notify_url'] = $this->url_notify; } function goPay($spc6bf93, $sp30c318, $spc3fe8b, $sp66faf9, $spb959ec) { $sp7ca622 = sprintf('%.2f', $spb959ec / 100); $this->defineConfig($spc6bf93); $sp9323fa = '5m'; $spf983d1 = new \GoodsDetail(); $spf983d1->setGoodsId('card'); $spf983d1->setGoodsName($spc3fe8b); $spf983d1->setPrice($sp7ca622); $spf983d1->setQuantity(1); $sp52c7dc = $spf983d1->getGoodsDetail(); $sp1b5e81 = array($sp52c7dc); $sp3efb2d = ''; $spd554a2 = new \AlipayTradePrecreateContentBuilder(); $spd554a2->setOutTradeNo($sp30c318); $spd554a2->setTotalAmount($sp7ca622); $spd554a2->setTimeExpress($sp9323fa); $spd554a2->setSubject($spc3fe8b); $spd554a2->setBody($sp66faf9); $spd554a2->setGoodsDetailList($sp1b5e81); $spd554a2->setAppAuthToken($sp3efb2d); $sp1dd625 = new \AlipayTradeService($spc6bf93); $sp9e64d4 = $sp1dd625->qrPay($spd554a2); switch ($sp9e64d4->getTradeStatus()) { case 'SUCCESS': $spd6e0e5 = $sp9e64d4->getResponse(); header('location: /qrcode/pay/' . $sp30c318 . '/aliqr?url=' . urlencode($spd6e0e5->qr_code)); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; break; case 'FAILED': if (!empty($sp9e64d4->getResponse())) { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: ' . serialize($sp9e64d4->getResponse())); throw new \Exception('支付宝创建订单二维码失败!!!<br>' . serialize($sp9e64d4->getResponse())); } else { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: 未知错误'); throw new \Exception('支付宝创建订单二维码失败!!!<br>未知错误'); } break; case 'UNKNOWN': if (!empty($sp9e64d4->getResponse())) { Log::error('Aliqr.goPay UNKNOWN: 支付宝创建订单二维码失败: ' . serialize($sp9e64d4->getResponse())); throw new \Exception('系统异常，状态未知!!!<br>' . serialize($sp9e64d4->getResponse())); } else { Log::error('Aliqr.goPay UNKNOWN: 系统异常，状态未知!!!: 未知错误'); throw new \Exception('系统异常，状态未知!!!<br>未知错误'); } break; default: throw new \Exception('不支持的返回状态，创建订单二维码返回异常!!!'); break; } } function verify($spc6bf93, $spc5d9aa) { $sp4dcba6 = isset($spc6bf93['isNotify']) && $spc6bf93['isNotify']; $this->defineConfig($spc6bf93); $sp30c318 = trim(isset($spc6bf93['out_trade_no']) ? $spc6bf93['out_trade_no'] : $_REQUEST['out_trade_no']); $spa86ed7 = new \AlipayTradeQueryContentBuilder(); $spa86ed7->setOutTradeNo($sp30c318); $sp10783b = new \AlipayTradeService($spc6bf93); $sp673cc4 = $sp10783b->queryTradeResult($spa86ed7); switch ($sp673cc4->getTradeStatus()) { case 'SUCCESS': $spd6e0e5 = $sp673cc4->getResponse(); $sp9fec61 = $spd6e0e5->trade_no; $sp51db0b = (int) ($spd6e0e5->receipt_amount * 100); $spc5d9aa($sp30c318, $sp51db0b, $sp9fec61); if ($sp4dcba6) { echo 'success'; } return true; break; case 'FAILED': if ($sp4dcba6) { echo 'failed'; } return false; break; case 'UNKNOWN': if ($sp4dcba6) { echo 'failed'; } return false; break; default: if ($sp4dcba6) { echo 'failed'; } return false; break; } } }