<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Token { private $clientId; private $clientSecret; private $accessToken; private $refreshToken; private static $requestUrl = 'https://open.youzan.com/oauth/token'; public function __construct($spaa708d, $spd1096f, $sp1bda2e = null, $sp9d4b68 = null) { $this->clientId = $spaa708d; $this->clientSecret = $spd1096f; $this->accessToken = $sp1bda2e; $this->refreshToken = $sp9d4b68; } public function getToken($sp8f02bb, $sp04b280 = array()) { $sp7c7a93 = array(); $sp7c7a93['client_id'] = $this->clientId; $sp7c7a93['client_secret'] = $this->clientSecret; if ($sp8f02bb === 'oauth') { $sp7c7a93['grant_type'] = 'authorization_code'; $sp7c7a93['code'] = $sp04b280['code']; $sp7c7a93['redirect_uri'] = $sp04b280['redirect_uri']; } elseif ($sp8f02bb === 'refresh_token') { $sp7c7a93['grant_type'] = 'refresh_token'; $sp7c7a93['refresh_token'] = $sp04b280['refresh_token']; } elseif ($sp8f02bb === 'self') { $sp7c7a93['grant_type'] = 'silent'; $sp7c7a93['kdt_id'] = $sp04b280['kdt_id']; } elseif ($sp8f02bb === 'platform_init') { $sp7c7a93['grant_type'] = 'authorize_platform'; } elseif ($sp8f02bb === 'platform') { $sp7c7a93['grant_type'] = 'authorize_platform'; $sp7c7a93['kdt_id'] = $sp04b280['kdt_id']; } return $this->parseResponse(Http::post(self::$requestUrl, $sp7c7a93)); } private function parseResponse($sp573844) { $sp69c4ce = json_decode($sp573844, true); if (null === $sp69c4ce) { throw new Exception('response invalid, data: ' . $sp573844); } return $sp69c4ce; } }