<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($sp1bda2e) { if ('' == $sp1bda2e) { throw new Exception('access_token不能为空'); } $this->accessToken = $sp1bda2e; } public function get($sp48df7c, $spe87b17, $sp7c7a93 = array()) { return $this->parseResponse(Http::get($this->url($sp48df7c, $spe87b17), $this->buildRequestParams($sp48df7c, $sp7c7a93))); } public function post($sp48df7c, $spe87b17, $sp7c7a93 = array(), $spb9b8d0 = array()) { return $this->parseResponse(Http::post($this->url($sp48df7c, $spe87b17), $this->buildRequestParams($sp48df7c, $sp7c7a93), $spb9b8d0)); } public function url($sp48df7c, $spe87b17) { $spef5e9f = explode('.', $sp48df7c); $sp48df7c = '/' . $spe87b17 . '/' . $spef5e9f[count($spef5e9f) - 1]; array_pop($spef5e9f); $sp48df7c = implode('.', $spef5e9f) . $sp48df7c; $sp59c732 = self::$requestUrl . $sp48df7c; return $sp59c732; } private function parseResponse($sp573844) { $sp69c4ce = json_decode($sp573844, true); if (null === $sp69c4ce) { throw new Exception('response invalid, data: ' . $sp573844); } return $sp69c4ce; } private function buildRequestParams($sp48df7c, $sp2ea146) { if (!is_array($sp2ea146)) { $sp2ea146 = array(); } $spccb62f = $this->getCommonParams($this->accessToken, $sp48df7c); foreach ($sp2ea146 as $spc57c89 => $sp2a00a3) { if (isset($spccb62f[$spc57c89])) { throw new Exception('参数名冲突'); } $spccb62f[$spc57c89] = $sp2a00a3; } return $spccb62f; } private function getCommonParams($sp1bda2e, $sp48df7c) { $sp7c7a93 = array(); $sp7c7a93[Protocol::TOKEN_KEY] = $sp1bda2e; $sp7c7a93[Protocol::METHOD_KEY] = $sp48df7c; return $sp7c7a93; } }