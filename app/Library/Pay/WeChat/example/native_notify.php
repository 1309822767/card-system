<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $spe4c4f6 = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $sp63838a = Log::Init($spe4c4f6, 15); class NativeNotifyCallBack extends WxPayNotify { public function unifiedorder($sp576cde, $spa20daf) { $sp317e70 = new WxPayUnifiedOrder(); $sp317e70->SetBody('test'); $sp317e70->SetAttach('test'); $sp317e70->SetOut_trade_no(WxPayConfig::MCHID . date('YmdHis')); $sp317e70->SetTotal_fee('1'); $sp317e70->SetTime_start(date('YmdHis')); $sp317e70->SetTime_expire(date('YmdHis', time() + 600)); $sp317e70->SetGoods_tag('test'); $sp317e70->SetNotify_url('http://paysdk.weixin.qq.com/example/notify.php'); $sp317e70->SetTrade_type('NATIVE'); $sp317e70->SetOpenid($sp576cde); $sp317e70->SetProduct_id($spa20daf); $spe62cd8 = WxPayApi::unifiedOrder($sp317e70); Log::DEBUG('unifiedorder:' . json_encode($spe62cd8)); return $spe62cd8; } public function NotifyProcess($spbda5b4, &$spb18c75) { Log::DEBUG('call back:' . json_encode($spbda5b4)); if (!array_key_exists('openid', $spbda5b4) || !array_key_exists('product_id', $spbda5b4)) { $spb18c75 = '回调数据异常'; return false; } $sp95b93f = $spbda5b4['openid']; $spa20daf = $spbda5b4['product_id']; $spe62cd8 = $this->unifiedorder($sp95b93f, $spa20daf); if (!array_key_exists('appid', $spe62cd8) || !array_key_exists('mch_id', $spe62cd8) || !array_key_exists('prepay_id', $spe62cd8)) { $spb18c75 = '统一下单失败'; return false; } $this->SetData('appid', $spe62cd8['appid']); $this->SetData('mch_id', $spe62cd8['mch_id']); $this->SetData('nonce_str', WxPayApi::getNonceStr()); $this->SetData('prepay_id', $spe62cd8['prepay_id']); $this->SetData('result_code', 'SUCCESS'); $this->SetData('err_code_des', 'OK'); return true; } } Log::DEBUG('begin notify!'); $sp92a4d6 = new NativeNotifyCallBack(); $sp92a4d6->Handle(true);