<?php
require_once '../lib/WxPay.Api.php'; class JsApiPay { public $data = null; public function GetOpenid() { if (!isset($_GET['code'])) { $spb06a1b = urlencode('http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] . $_SERVER['QUERY_STRING']); $sp81923e = $this->__CreateOauthUrlForCode($spb06a1b); Header("Location: {$sp81923e}"); die; } else { $spd51873 = $_GET['code']; $sp95b93f = $this->getOpenidFromMp($spd51873); return $sp95b93f; } } public function GetJsApiParameters($sp78e95c) { if (!array_key_exists('appid', $sp78e95c) || !array_key_exists('prepay_id', $sp78e95c) || $sp78e95c['prepay_id'] == '') { throw new WxPayException('参数错误'); } $spe1be8c = new WxPayJsApiPay(); $spe1be8c->SetAppid($sp78e95c['appid']); $spdf477a = time(); $spe1be8c->SetTimeStamp("{$spdf477a}"); $spe1be8c->SetNonceStr(WxPayApi::getNonceStr()); $spe1be8c->SetPackage('prepay_id=' . $sp78e95c['prepay_id']); $spe1be8c->SetSignType('MD5'); $spe1be8c->SetPaySign($spe1be8c->MakeSign()); $sp29f3cf = json_encode($spe1be8c->GetValues()); return $sp29f3cf; } public function GetOpenidFromMp($spd51873) { $sp81923e = $this->__CreateOauthUrlForOpenid($spd51873); $spd7a82f = curl_init(); curl_setopt($spd7a82f, CURLOPT_TIMEOUT, $this->curl_timeout); curl_setopt($spd7a82f, CURLOPT_URL, $sp81923e); curl_setopt($spd7a82f, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($spd7a82f, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($spd7a82f, CURLOPT_HEADER, FALSE); curl_setopt($spd7a82f, CURLOPT_RETURNTRANSFER, TRUE); if (WxPayConfig::CURL_PROXY_HOST != '0.0.0.0' && WxPayConfig::CURL_PROXY_PORT != 0) { curl_setopt($spd7a82f, CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST); curl_setopt($spd7a82f, CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT); } $sp868884 = curl_exec($spd7a82f); curl_close($spd7a82f); $spbda5b4 = json_decode($sp868884, true); $this->data = $spbda5b4; $sp95b93f = $spbda5b4['openid']; return $sp95b93f; } private function ToUrlParams($spde5538) { $sp4bfab3 = ''; foreach ($spde5538 as $sp783862 => $spce84f3) { if ($sp783862 != 'sign') { $sp4bfab3 .= $sp783862 . '=' . $spce84f3 . '&'; } } $sp4bfab3 = trim($sp4bfab3, '&'); return $sp4bfab3; } public function GetEditAddressParameters() { $spd9fbbb = $this->data; $spbda5b4 = array(); $spbda5b4['appid'] = WxPayConfig::APPID; $spbda5b4['url'] = 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; $sp8ff766 = time(); $spbda5b4['timestamp'] = "{$sp8ff766}"; $spbda5b4['noncestr'] = '1234568'; $spbda5b4['accesstoken'] = $spd9fbbb['access_token']; ksort($spbda5b4); $sp342eea = $this->ToUrlParams($spbda5b4); $sp2e7e7f = sha1($sp342eea); $spe9f94a = array('addrSign' => $sp2e7e7f, 'signType' => 'sha1', 'scope' => 'jsapi_address', 'appId' => WxPayConfig::APPID, 'timeStamp' => $spbda5b4['timestamp'], 'nonceStr' => $spbda5b4['noncestr']); $sp29f3cf = json_encode($spe9f94a); return $sp29f3cf; } private function __CreateOauthUrlForCode($sp63bda8) { $spde5538['appid'] = WxPayConfig::APPID; $spde5538['redirect_uri'] = "{$sp63bda8}"; $spde5538['response_type'] = 'code'; $spde5538['scope'] = 'snsapi_base'; $spde5538['state'] = 'STATE' . '#wechat_redirect'; $sp778721 = $this->ToUrlParams($spde5538); return 'https://open.weixin.qq.com/connect/oauth2/authorize?' . $sp778721; } private function __CreateOauthUrlForOpenid($spd51873) { $spde5538['appid'] = WxPayConfig::APPID; $spde5538['secret'] = WxPayConfig::APPSECRET; $spde5538['code'] = $spd51873; $spde5538['grant_type'] = 'authorization_code'; $sp778721 = $this->ToUrlParams($spde5538); return 'https://api.weixin.qq.com/sns/oauth2/access_token?' . $sp778721; } }