<?php
require_once '../lib/WxPay.Api.php'; class JsApiPay { public $data = null; public function GetOpenid() { if (!isset($_GET['code'])) { $sp2f2d7f = urlencode('http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] . $_SERVER['QUERY_STRING']); $sp59c732 = $this->__CreateOauthUrlForCode($sp2f2d7f); Header("Location: {$sp59c732}"); die; } else { $sp199781 = $_GET['code']; $spabb08a = $this->getOpenidFromMp($sp199781); return $spabb08a; } } public function GetJsApiParameters($sp3f38fe) { if (!array_key_exists('appid', $sp3f38fe) || !array_key_exists('prepay_id', $sp3f38fe) || $sp3f38fe['prepay_id'] == '') { throw new WxPayException('参数错误'); } $spa93ea7 = new WxPayJsApiPay(); $spa93ea7->SetAppid($sp3f38fe['appid']); $sp5d5855 = time(); $spa93ea7->SetTimeStamp("{$sp5d5855}"); $spa93ea7->SetNonceStr(WxPayApi::getNonceStr()); $spa93ea7->SetPackage('prepay_id=' . $sp3f38fe['prepay_id']); $spa93ea7->SetSignType('MD5'); $spa93ea7->SetPaySign($spa93ea7->MakeSign()); $spdcf67c = json_encode($spa93ea7->GetValues()); return $spdcf67c; } public function GetOpenidFromMp($sp199781) { $sp59c732 = $this->__CreateOauthUrlForOpenid($sp199781); $sp72f257 = curl_init(); curl_setopt($sp72f257, CURLOPT_TIMEOUT, $this->curl_timeout); curl_setopt($sp72f257, CURLOPT_URL, $sp59c732); curl_setopt($sp72f257, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($sp72f257, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($sp72f257, CURLOPT_HEADER, FALSE); curl_setopt($sp72f257, CURLOPT_RETURNTRANSFER, TRUE); if (WxPayConfig::CURL_PROXY_HOST != '0.0.0.0' && WxPayConfig::CURL_PROXY_PORT != 0) { curl_setopt($sp72f257, CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST); curl_setopt($sp72f257, CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT); } $sp57fbf9 = curl_exec($sp72f257); curl_close($sp72f257); $sp69c4ce = json_decode($sp57fbf9, true); $this->data = $sp69c4ce; $spabb08a = $sp69c4ce['openid']; return $spabb08a; } private function ToUrlParams($spceb02e) { $sp10414e = ''; foreach ($spceb02e as $spc57c89 => $sp2a00a3) { if ($spc57c89 != 'sign') { $sp10414e .= $spc57c89 . '=' . $sp2a00a3 . '&'; } } $sp10414e = trim($sp10414e, '&'); return $sp10414e; } public function GetEditAddressParameters() { $sp4f53bc = $this->data; $sp69c4ce = array(); $sp69c4ce['appid'] = WxPayConfig::APPID; $sp69c4ce['url'] = 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']; $spaae7dc = time(); $sp69c4ce['timestamp'] = "{$spaae7dc}"; $sp69c4ce['noncestr'] = '1234568'; $sp69c4ce['accesstoken'] = $sp4f53bc['access_token']; ksort($sp69c4ce); $sp7c7a93 = $this->ToUrlParams($sp69c4ce); $spcde60a = sha1($sp7c7a93); $sp356bab = array('addrSign' => $spcde60a, 'signType' => 'sha1', 'scope' => 'jsapi_address', 'appId' => WxPayConfig::APPID, 'timeStamp' => $sp69c4ce['timestamp'], 'nonceStr' => $sp69c4ce['noncestr']); $spdcf67c = json_encode($sp356bab); return $spdcf67c; } private function __CreateOauthUrlForCode($spa3dac3) { $spceb02e['appid'] = WxPayConfig::APPID; $spceb02e['redirect_uri'] = "{$spa3dac3}"; $spceb02e['response_type'] = 'code'; $spceb02e['scope'] = 'snsapi_base'; $spceb02e['state'] = 'STATE' . '#wechat_redirect'; $sp772728 = $this->ToUrlParams($spceb02e); return 'https://open.weixin.qq.com/connect/oauth2/authorize?' . $sp772728; } private function __CreateOauthUrlForOpenid($sp199781) { $spceb02e['appid'] = WxPayConfig::APPID; $spceb02e['secret'] = WxPayConfig::APPSECRET; $spceb02e['code'] = $sp199781; $spceb02e['grant_type'] = 'authorization_code'; $sp772728 = $this->ToUrlParams($spceb02e); return 'https://api.weixin.qq.com/sns/oauth2/access_token?' . $sp772728; } }