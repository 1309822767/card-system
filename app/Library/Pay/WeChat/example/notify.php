<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $spe4c4f6 = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $sp63838a = Log::Init($spe4c4f6, 15); class PayNotifyCallBack extends WxPayNotify { public function Queryorder($sp37dae6) { $sp317e70 = new WxPayOrderQuery(); $sp317e70->SetTransaction_id($sp37dae6); $spe62cd8 = WxPayApi::orderQuery($sp317e70); Log::DEBUG('query:' . json_encode($spe62cd8)); if (array_key_exists('return_code', $spe62cd8) && array_key_exists('result_code', $spe62cd8) && $spe62cd8['return_code'] == 'SUCCESS' && $spe62cd8['result_code'] == 'SUCCESS') { return true; } return false; } public function NotifyProcess($spbda5b4, &$spb18c75) { Log::DEBUG('call back:' . json_encode($spbda5b4)); $sp57b1bf = array(); if (!array_key_exists('transaction_id', $spbda5b4)) { $spb18c75 = '输入参数不正确'; return false; } if (!$this->Queryorder($spbda5b4['transaction_id'])) { $spb18c75 = '订单查询失败'; return false; } return true; } } Log::DEBUG('begin notify'); $sp92a4d6 = new PayNotifyCallBack(); $sp92a4d6->Handle(false);