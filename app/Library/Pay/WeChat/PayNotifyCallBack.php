<?php
namespace App\Library\Pay\WeChat; require_once __DIR__ . '/lib/WxPay.Api.php'; require_once __DIR__ . '/lib/WxPay.Notify.php'; require_once 'WxLog.php'; class PayNotifyCallBack extends \WxPayNotify { private $successCallback = null; public function __construct($sp53cf01) { $this->successCallback = $sp53cf01; } public function QueryOrder($sp5ebe4f) { $sp5bf110 = new \WxPayOrderQuery(); $sp5bf110->SetTransaction_id($sp5ebe4f); $sp820aff = \WxPayApi::orderQuery($sp5bf110); \WxLog::DEBUG('query:' . json_encode($sp820aff)); if (array_key_exists('return_code', $sp820aff) && array_key_exists('result_code', $sp820aff) && $sp820aff['return_code'] == 'SUCCESS' && $sp820aff['result_code'] == 'SUCCESS') { return true; } return false; } public function NotifyProcess($sp69c4ce, &$sp3a6f3c) { \WxLog::DEBUG('call back:' . json_encode($sp69c4ce)); if (!array_key_exists('transaction_id', $sp69c4ce)) { $sp3a6f3c = '输入参数不正确'; \WxLog::DEBUG('begin process 输入参数不正确'); return false; } if (!$this->QueryOrder($sp69c4ce['transaction_id'])) { $sp3a6f3c = '订单查询失败'; \WxLog::DEBUG('begin process 订单查询失败'); return false; } if ($this->successCallback) { call_user_func_array($this->successCallback, array($sp69c4ce['out_trade_no'], $sp69c4ce['total_fee'], $sp69c4ce['transaction_id'])); } return true; } }