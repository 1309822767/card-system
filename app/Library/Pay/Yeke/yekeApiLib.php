<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $sp7c7a93 = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $sp820aff = HttpClient::quickPost(yeke_API_GATE, $sp7c7a93); return $sp820aff; } public static function getPayType() { $sp00e9d2 = json_decode(self::getPayGate(), true); $sp69c4ce = array(); if ($sp00e9d2['status']) { foreach ($sp00e9d2['list'] as $sp1e4b49 => $sp7a0550) { $sp69c4ce[] = array('paytype' => $sp7a0550['paytype'], 'channelname' => $sp7a0550['channelname']); } } return $sp69c4ce; } public static function getChannel($spd26ada) { $sp00e9d2 = json_decode(self::getPayGate(), true); $sp69c4ce = array(); if ($spd26ada == 'card') { if ($sp00e9d2['status'] && $sp00e9d2['list']) { foreach ($sp00e9d2['list'] as $sp7a0550) { if ($sp7a0550['paytype'] == $spd26ada) { foreach ($sp7a0550['datalist'] as $sp1e4b49 => $spbc0d35) { $sp69c4ce[] = array('channelid' => $spbc0d35['channelid'], 'channelname' => $spbc0d35['channelname'], 'imgurl' => $spbc0d35['imgurl']); } } } } } else { if ($sp00e9d2['status'] && $sp00e9d2['list']) { foreach ($sp00e9d2['list'] as $sp7a0550) { if ($sp7a0550['paytype'] == $spd26ada) { foreach ($sp7a0550['datalist'] as $sp1e4b49 => $spbc0d35) { $sp69c4ce[] = array('bankcode' => $spbc0d35['bankcode'], 'bankname' => $spbc0d35['bankname'], 'imgurl' => $spbc0d35['imgurl']); } } } } } return $sp69c4ce; } public static function getCardValue() { $sp00e9d2 = json_decode(self::getPayGate(), true); $sp69c4ce = array(); if ($sp00e9d2['status'] && $sp00e9d2['list']) { foreach ($sp00e9d2['list'] as $sp7a0550) { if ($sp7a0550['paytype'] == 'card') { foreach ($sp7a0550['datalist'] as $sp1e4b49 => $sp7a0550) { $sp69c4ce[] = array('channelid' => $sp7a0550['channelid'], 'channelname' => $sp7a0550['channelname'], 'cardvalue' => $sp7a0550['cardvalue'], 'cardlength' => $sp7a0550['cardlength']); } } } } return $sp69c4ce; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($sp7c7a93) { $sp7c7a93 = array_merge(array('P_userid' => yeke_USER_ID), $sp7c7a93); $sp1e1df1 = $this->makeSign($sp7c7a93); $sp7c7a93 = array_merge($sp7c7a93, array('P_sign' => $sp1e1df1, 'action' => 'payGate')); switch ($sp7c7a93['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($sp7c7a93); break; case 'card': return $this->payGateCard($sp7c7a93); break; default: return 'error,支付方式错误'; } } public function payGateBank($sp7c7a93) { $sp512d95 = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $sp512d95 .= '<body onload="document.pay.submit()">'; $sp512d95 .= '请稍候，正在跳转...'; $sp512d95 .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($sp7c7a93 as $sp1e4b49 => $sp7a0550) { $sp512d95 .= '<input type="hidden" name="' . $sp1e4b49 . '" value="' . $sp7a0550 . '">'; } $sp512d95 .= '</body></html>'; return $sp512d95; } public function payGateCard($sp7c7a93) { if ($sp7c7a93['P_cardnum'] == '' || $sp7c7a93['P_cardpwd'] == '' || $sp7c7a93['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $sp820aff = HttpClient::quickPost(yeke_API_GATE, $sp7c7a93); return $sp820aff; } public function makeSign($sp7c7a93) { $sp512d95 = ''; foreach ($sp7c7a93 as $sp1e4b49 => $sp7a0550) { $sp512d95 .= $sp512d95 ? '&' : ''; $sp512d95 .= $sp1e4b49 . '=' . $sp7a0550; } $sp1e1df1 = md5($sp512d95 . yeke_USER_KEY); return $sp1e1df1; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $sp250284 = $_POST['P_sign']; foreach ($_POST as $sp1e4b49 => $sp7a0550) { if ($sp1e4b49 == 'P_sign') { unset($_POST['P_sign']); } } $sp7b03f1 = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $sp250284 . '=' . $sp7b03f1); if ($sp250284 == $sp7b03f1) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $sp250284 = $_GET['P_sign']; foreach ($_GET as $sp1e4b49 => $sp7a0550) { if ($sp1e4b49 == 'P_sign') { unset($_GET['P_sign']); } } $sp7b03f1 = $this->makeSign($_GET); if ($sp250284 == $sp7b03f1) { return true; } else { return false; } } public function logs($sp33b837, $sp7c7a93, $sp7b03f1) { date_default_timezone_set('PRC'); if (!empty($sp7c7a93)) { $sp512d95 = ''; foreach ($sp7c7a93 as $sp1e4b49 => $sp7a0550) { $sp512d95 .= $sp512d95 ? '&' : ''; $sp512d95 .= $sp1e4b49 . '=' . $sp7a0550; } $spe0838b = date('Y-m-d H:i:s') . '
' . $sp33b837 . '
' . $sp512d95 . '
' . $sp7b03f1 . '

........................................

'; $sp050e27 = 'log'; if (!file_exists($sp050e27)) { mkdir($sp050e27, 511, true); } $sp986884 = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $sp2fb581 = fopen($sp050e27 . '/' . $sp986884, 'ab'); fwrite($sp2fb581, $spe0838b); fclose($sp2fb581); } } }