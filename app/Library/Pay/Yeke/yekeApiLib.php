<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $sp342eea = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $spe62cd8 = HttpClient::quickPost(yeke_API_GATE, $sp342eea); return $spe62cd8; } public static function getPayType() { $sp3562f5 = json_decode(self::getPayGate(), true); $spbda5b4 = array(); if ($sp3562f5['status']) { foreach ($sp3562f5['list'] as $spc37b44 => $spfca62c) { $spbda5b4[] = array('paytype' => $spfca62c['paytype'], 'channelname' => $spfca62c['channelname']); } } return $spbda5b4; } public static function getChannel($sp7ea471) { $sp3562f5 = json_decode(self::getPayGate(), true); $spbda5b4 = array(); if ($sp7ea471 == 'card') { if ($sp3562f5['status'] && $sp3562f5['list']) { foreach ($sp3562f5['list'] as $spfca62c) { if ($spfca62c['paytype'] == $sp7ea471) { foreach ($spfca62c['datalist'] as $spc37b44 => $sp589d7d) { $spbda5b4[] = array('channelid' => $sp589d7d['channelid'], 'channelname' => $sp589d7d['channelname'], 'imgurl' => $sp589d7d['imgurl']); } } } } } else { if ($sp3562f5['status'] && $sp3562f5['list']) { foreach ($sp3562f5['list'] as $spfca62c) { if ($spfca62c['paytype'] == $sp7ea471) { foreach ($spfca62c['datalist'] as $spc37b44 => $sp589d7d) { $spbda5b4[] = array('bankcode' => $sp589d7d['bankcode'], 'bankname' => $sp589d7d['bankname'], 'imgurl' => $sp589d7d['imgurl']); } } } } } return $spbda5b4; } public static function getCardValue() { $sp3562f5 = json_decode(self::getPayGate(), true); $spbda5b4 = array(); if ($sp3562f5['status'] && $sp3562f5['list']) { foreach ($sp3562f5['list'] as $spfca62c) { if ($spfca62c['paytype'] == 'card') { foreach ($spfca62c['datalist'] as $spc37b44 => $spfca62c) { $spbda5b4[] = array('channelid' => $spfca62c['channelid'], 'channelname' => $spfca62c['channelname'], 'cardvalue' => $spfca62c['cardvalue'], 'cardlength' => $spfca62c['cardlength']); } } } } return $spbda5b4; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($sp342eea) { $sp342eea = array_merge(array('P_userid' => yeke_USER_ID), $sp342eea); $spa0f4ca = $this->makeSign($sp342eea); $sp342eea = array_merge($sp342eea, array('P_sign' => $spa0f4ca, 'action' => 'payGate')); switch ($sp342eea['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($sp342eea); break; case 'card': return $this->payGateCard($sp342eea); break; default: return 'error,支付方式错误'; } } public function payGateBank($sp342eea) { $sp4e169a = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $sp4e169a .= '<body onload="document.pay.submit()">'; $sp4e169a .= '请稍候，正在跳转...'; $sp4e169a .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($sp342eea as $spc37b44 => $spfca62c) { $sp4e169a .= '<input type="hidden" name="' . $spc37b44 . '" value="' . $spfca62c . '">'; } $sp4e169a .= '</body></html>'; return $sp4e169a; } public function payGateCard($sp342eea) { if ($sp342eea['P_cardnum'] == '' || $sp342eea['P_cardpwd'] == '' || $sp342eea['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $spe62cd8 = HttpClient::quickPost(yeke_API_GATE, $sp342eea); return $spe62cd8; } public function makeSign($sp342eea) { $sp4e169a = ''; foreach ($sp342eea as $spc37b44 => $spfca62c) { $sp4e169a .= $sp4e169a ? '&' : ''; $sp4e169a .= $spc37b44 . '=' . $spfca62c; } $spa0f4ca = md5($sp4e169a . yeke_USER_KEY); return $spa0f4ca; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $sp2da059 = $_POST['P_sign']; foreach ($_POST as $spc37b44 => $spfca62c) { if ($spc37b44 == 'P_sign') { unset($_POST['P_sign']); } } $sp747cf4 = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $sp2da059 . '=' . $sp747cf4); if ($sp2da059 == $sp747cf4) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $sp2da059 = $_GET['P_sign']; foreach ($_GET as $spc37b44 => $spfca62c) { if ($spc37b44 == 'P_sign') { unset($_GET['P_sign']); } } $sp747cf4 = $this->makeSign($_GET); if ($sp2da059 == $sp747cf4) { return true; } else { return false; } } public function logs($sp6f8cf7, $sp342eea, $sp747cf4) { date_default_timezone_set('PRC'); if (!empty($sp342eea)) { $sp4e169a = ''; foreach ($sp342eea as $spc37b44 => $spfca62c) { $sp4e169a .= $sp4e169a ? '&' : ''; $sp4e169a .= $spc37b44 . '=' . $spfca62c; } $sp3e892f = date('Y-m-d H:i:s') . '
' . $sp6f8cf7 . '
' . $sp4e169a . '
' . $sp747cf4 . '

........................................

'; $sp3afc5d = 'log'; if (!file_exists($sp3afc5d)) { mkdir($sp3afc5d, 511, true); } $sp61be63 = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $sp233a86 = fopen($sp3afc5d . '/' . $sp61be63, 'ab'); fwrite($sp233a86, $sp3e892f); fclose($sp233a86); } } }