<?php
class HttpClient { var $host; var $port; var $path; var $method; var $postdata = ''; var $cookies = array(); var $referer; var $accept = 'text/xml,application/xml,application/xhtml+xml,text/html,text/plain,image/png,image/jpeg,image/gif,*/*'; var $accept_encoding = 'gzip'; var $accept_language = 'en-us'; var $user_agent = 'Incutio HttpClient v0.9'; var $timeout = 20; var $use_gzip = true; var $persist_cookies = true; var $persist_referers = true; var $debug = false; var $handle_redirects = true; var $max_redirects = 5; var $headers_only = false; var $username; var $password; var $status; var $headers = array(); var $content = ''; var $errormsg; var $redirect_count = 0; var $cookie_host = ''; function __construct($sp5444f4, $spd2ccf2 = 80) { $this->host = $sp5444f4; $this->port = $spd2ccf2; } function get($sp136037, $spbda5b4 = false) { $this->path = $sp136037; $this->method = 'GET'; if ($spbda5b4) { $this->path .= '?' . $this->buildQueryString($spbda5b4); } return $this->doRequest(); } function post($sp136037, $spbda5b4) { $this->path = $sp136037; $this->method = 'POST'; $this->postdata = $this->buildQueryString($spbda5b4); return $this->doRequest(); } function buildQueryString($spbda5b4) { $sp285919 = ''; if (is_array($spbda5b4)) { foreach ($spbda5b4 as $spc37b44 => $spfca62c) { if (is_array($spfca62c)) { foreach ($spfca62c as $sp589d7d) { $sp285919 .= urlencode($spc37b44) . '=' . $sp589d7d . '&'; } } else { $sp285919 .= urlencode($spc37b44) . '=' . $spfca62c . '&'; } } $sp285919 = substr($sp285919, 0, -1); } else { $sp285919 = $spbda5b4; } return $sp285919; } function doRequest() { if (!($sp233a86 = @fsockopen($this->host, $this->port, $spa643ed, $sp56a798, $this->timeout))) { switch ($spa643ed) { case -3: $this->errormsg = 'Socket creation failed (-3)'; break; case -4: $this->errormsg = 'DNS lookup failure (-4)'; break; case -5: $this->errormsg = 'Connection refused or timed out (-5)'; break; default: $this->errormsg = 'Connection failed (' . $spa643ed . ')'; $this->errormsg .= ' ' . $sp56a798; $this->debug($this->errormsg); } return false; } socket_set_timeout($sp233a86, $this->timeout); $spf631e6 = $this->buildRequest(); $this->debug('Request', $spf631e6); fwrite($sp233a86, $spf631e6); $this->headers = array(); $this->content = ''; $this->errormsg = ''; $sp7b9b52 = true; $spcca7a8 = true; while (!feof($sp233a86)) { $sp91490f = fgets($sp233a86, 4096); if ($spcca7a8) { $spcca7a8 = false; if (!preg_match('/HTTP\\/(\\d\\.\\d)\\s*(\\d+)\\s*(.*)/', $sp91490f, $spf68fa5)) { $this->errormsg = 'Status code line invalid: ' . htmlentities($sp91490f); $this->debug($this->errormsg); return false; } $this->status = $spf68fa5[2]; $this->debug(trim($sp91490f)); continue; } if ($sp7b9b52) { if (trim($sp91490f) == '') { $sp7b9b52 = false; $this->debug('Received Headers', $this->headers); if ($this->headers_only) { break; } continue; } if (!preg_match('/([^:]+):\\s*(.*)/', $sp91490f, $spf68fa5)) { continue; } $spc37b44 = strtolower(trim($spf68fa5[1])); $spfca62c = trim($spf68fa5[2]); if (isset($this->headers[$spc37b44])) { if (is_array($this->headers[$spc37b44])) { $this->headers[$spc37b44][] = $spfca62c; } else { $this->headers[$spc37b44] = array($this->headers[$spc37b44], $spfca62c); } } else { $this->headers[$spc37b44] = $spfca62c; } continue; } $this->content .= $sp91490f; } fclose($sp233a86); if (isset($this->headers['content-encoding']) && $this->headers['content-encoding'] == 'gzip') { $this->debug('Content is gzip encoded, unzipping it'); $this->content = substr($this->content, 10); $this->content = gzinflate($this->content); } if ($this->persist_cookies && isset($this->headers['set-cookie']) && $this->host == $this->cookie_host) { $sp3ff518 = $this->headers['set-cookie']; if (!is_array($sp3ff518)) { $sp3ff518 = array($sp3ff518); } foreach ($sp3ff518 as $sp6df092) { if (preg_match('/([^=]+)=([^;]+);/', $sp6df092, $spf68fa5)) { $this->cookies[$spf68fa5[1]] = $spf68fa5[2]; } } $this->cookie_host = $this->host; } if ($this->persist_referers) { $this->debug('Persisting referer: ' . $this->getRequestURL()); $this->referer = $this->getRequestURL(); } if ($this->handle_redirects) { if (++$this->redirect_count >= $this->max_redirects) { $this->errormsg = 'Number of redirects exceeded maximum (' . $this->max_redirects . ')'; $this->debug($this->errormsg); $this->redirect_count = 0; return false; } $sp56e4ff = isset($this->headers['location']) ? $this->headers['location'] : ''; $sp2f6c74 = isset($this->headers['uri']) ? $this->headers['uri'] : ''; if ($sp56e4ff || $sp2f6c74) { $sp81923e = parse_url($sp56e4ff . $sp2f6c74); return $this->get($sp81923e['path']); } } return true; } function buildRequest() { $sp79f0c2 = array(); $sp79f0c2[] = "{$this->method} {$this->path} HTTP/1.0"; $sp79f0c2[] = "Host: {$this->host}"; $sp79f0c2[] = "User-Agent: {$this->user_agent}"; $sp79f0c2[] = "Accept: {$this->accept}"; if ($this->use_gzip) { $sp79f0c2[] = "Accept-encoding: {$this->accept_encoding}"; } $sp79f0c2[] = "Accept-language: {$this->accept_language}"; if ($this->referer) { $sp79f0c2[] = "Referer: {$this->referer}"; } if ($this->cookies) { $sp6df092 = 'Cookie: '; foreach ($this->cookies as $spc37b44 => $sp12919e) { $sp6df092 .= "{$spc37b44}={$sp12919e}; "; } $sp79f0c2[] = $sp6df092; } if ($this->username && $this->password) { $sp79f0c2[] = 'Authorization: BASIC ' . base64_encode($this->username . ':' . $this->password); } if ($this->postdata) { $sp79f0c2[] = 'Content-Type: application/x-www-form-urlencoded'; $sp79f0c2[] = 'Content-Length: ' . strlen($this->postdata); } $spf631e6 = implode('
', $sp79f0c2) . '

' . $this->postdata; return $spf631e6; } function getStatus() { return $this->status; } function getContent() { return $this->content; } function getHeaders() { return $this->headers; } function getHeader($sp1cc2d0) { $sp1cc2d0 = strtolower($sp1cc2d0); if (isset($this->headers[$sp1cc2d0])) { return $this->headers[$sp1cc2d0]; } else { return false; } } function getError() { return $this->errormsg; } function getCookies() { return $this->cookies; } function getRequestURL() { $sp81923e = 'http://' . $this->host; if ($this->port != 80) { $sp81923e .= ':' . $this->port; } $sp81923e .= $this->path; return $sp81923e; } function setUserAgent($spb81a87) { $this->user_agent = $spb81a87; } function setAuthorization($spfaeaa7, $spc5d82e) { $this->username = $spfaeaa7; $this->password = $spc5d82e; } function setCookies($spc539d6) { $this->cookies = $spc539d6; } function useGzip($sp25ed47) { $this->use_gzip = $sp25ed47; } function setPersistCookies($sp25ed47) { $this->persist_cookies = $sp25ed47; } function setPersistReferers($sp25ed47) { $this->persist_referers = $sp25ed47; } function setHandleRedirects($sp25ed47) { $this->handle_redirects = $sp25ed47; } function setMaxRedirects($spc277ed) { $this->max_redirects = $spc277ed; } function setHeadersOnly($sp25ed47) { $this->headers_only = $sp25ed47; } function setDebug($sp25ed47) { $this->debug = $sp25ed47; } function quickGet($sp81923e) { $spa43692 = parse_url($sp81923e); $sp5444f4 = $spa43692['host']; $spd2ccf2 = isset($spa43692['port']) ? $spa43692['port'] : 80; $sp136037 = isset($spa43692['path']) ? $spa43692['path'] : '/'; if (isset($spa43692['query'])) { $sp136037 .= '?' . $spa43692['query']; } $sp9bf6b7 = new HttpClient($sp5444f4, $spd2ccf2); if (!$sp9bf6b7->get($sp136037)) { return false; } else { return $sp9bf6b7->getContent(); } } static function quickPost($sp81923e, $spbda5b4) { $spa43692 = parse_url($sp81923e); $sp5444f4 = $spa43692['host']; $spd2ccf2 = isset($spa43692['port']) ? $spa43692['port'] : 80; $sp136037 = isset($spa43692['path']) ? $spa43692['path'] : '/'; $sp9bf6b7 = new HttpClient($sp5444f4, $spd2ccf2); if (!$sp9bf6b7->post($sp136037, $spbda5b4)) { return false; } else { return $sp9bf6b7->getContent(); } } function debug($spb18c75, $sp4f3bcf = false) { if ($this->debug) { print '<div style="border: 1px solid red; padding: 0.5em; margin: 0.5em;"><strong>HttpClient Debug:</strong> ' . $spb18c75; if ($sp4f3bcf) { ob_start(); print_r($sp4f3bcf); $sp3e892f = htmlentities(ob_get_contents()); ob_end_clean(); print '<pre>' . $sp3e892f . '</pre>'; } print '</div>'; } } }