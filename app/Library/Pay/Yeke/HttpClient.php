<?php
class HttpClient { var $host; var $port; var $path; var $method; var $postdata = ''; var $cookies = array(); var $referer; var $accept = 'text/xml,application/xml,application/xhtml+xml,text/html,text/plain,image/png,image/jpeg,image/gif,*/*'; var $accept_encoding = 'gzip'; var $accept_language = 'en-us'; var $user_agent = 'Incutio HttpClient v0.9'; var $timeout = 20; var $use_gzip = true; var $persist_cookies = true; var $persist_referers = true; var $debug = false; var $handle_redirects = true; var $max_redirects = 5; var $headers_only = false; var $username; var $password; var $status; var $headers = array(); var $content = ''; var $errormsg; var $redirect_count = 0; var $cookie_host = ''; function __construct($sp43ee63, $sp490008 = 80) { $this->host = $sp43ee63; $this->port = $sp490008; } function get($sp8157ee, $sp69c4ce = false) { $this->path = $sp8157ee; $this->method = 'GET'; if ($sp69c4ce) { $this->path .= '?' . $this->buildQueryString($sp69c4ce); } return $this->doRequest(); } function post($sp8157ee, $sp69c4ce) { $this->path = $sp8157ee; $this->method = 'POST'; $this->postdata = $this->buildQueryString($sp69c4ce); return $this->doRequest(); } function buildQueryString($sp69c4ce) { $sp91b010 = ''; if (is_array($sp69c4ce)) { foreach ($sp69c4ce as $sp1e4b49 => $sp7a0550) { if (is_array($sp7a0550)) { foreach ($sp7a0550 as $spbc0d35) { $sp91b010 .= urlencode($sp1e4b49) . '=' . $spbc0d35 . '&'; } } else { $sp91b010 .= urlencode($sp1e4b49) . '=' . $sp7a0550 . '&'; } } $sp91b010 = substr($sp91b010, 0, -1); } else { $sp91b010 = $sp69c4ce; } return $sp91b010; } function doRequest() { if (!($sp2fb581 = @fsockopen($this->host, $this->port, $spf5e88c, $spc5ebe4, $this->timeout))) { switch ($spf5e88c) { case -3: $this->errormsg = 'Socket creation failed (-3)'; break; case -4: $this->errormsg = 'DNS lookup failure (-4)'; break; case -5: $this->errormsg = 'Connection refused or timed out (-5)'; break; default: $this->errormsg = 'Connection failed (' . $spf5e88c . ')'; $this->errormsg .= ' ' . $spc5ebe4; $this->debug($this->errormsg); } return false; } socket_set_timeout($sp2fb581, $this->timeout); $sp6a5e99 = $this->buildRequest(); $this->debug('Request', $sp6a5e99); fwrite($sp2fb581, $sp6a5e99); $this->headers = array(); $this->content = ''; $this->errormsg = ''; $spe0a9fe = true; $sp0ba754 = true; while (!feof($sp2fb581)) { $spf5239b = fgets($sp2fb581, 4096); if ($sp0ba754) { $sp0ba754 = false; if (!preg_match('/HTTP\\/(\\d\\.\\d)\\s*(\\d+)\\s*(.*)/', $spf5239b, $sp71485b)) { $this->errormsg = 'Status code line invalid: ' . htmlentities($spf5239b); $this->debug($this->errormsg); return false; } $this->status = $sp71485b[2]; $this->debug(trim($spf5239b)); continue; } if ($spe0a9fe) { if (trim($spf5239b) == '') { $spe0a9fe = false; $this->debug('Received Headers', $this->headers); if ($this->headers_only) { break; } continue; } if (!preg_match('/([^:]+):\\s*(.*)/', $spf5239b, $sp71485b)) { continue; } $sp1e4b49 = strtolower(trim($sp71485b[1])); $sp7a0550 = trim($sp71485b[2]); if (isset($this->headers[$sp1e4b49])) { if (is_array($this->headers[$sp1e4b49])) { $this->headers[$sp1e4b49][] = $sp7a0550; } else { $this->headers[$sp1e4b49] = array($this->headers[$sp1e4b49], $sp7a0550); } } else { $this->headers[$sp1e4b49] = $sp7a0550; } continue; } $this->content .= $spf5239b; } fclose($sp2fb581); if (isset($this->headers['content-encoding']) && $this->headers['content-encoding'] == 'gzip') { $this->debug('Content is gzip encoded, unzipping it'); $this->content = substr($this->content, 10); $this->content = gzinflate($this->content); } if ($this->persist_cookies && isset($this->headers['set-cookie']) && $this->host == $this->cookie_host) { $sp7913bc = $this->headers['set-cookie']; if (!is_array($sp7913bc)) { $sp7913bc = array($sp7913bc); } foreach ($sp7913bc as $sp74b8e5) { if (preg_match('/([^=]+)=([^;]+);/', $sp74b8e5, $sp71485b)) { $this->cookies[$sp71485b[1]] = $sp71485b[2]; } } $this->cookie_host = $this->host; } if ($this->persist_referers) { $this->debug('Persisting referer: ' . $this->getRequestURL()); $this->referer = $this->getRequestURL(); } if ($this->handle_redirects) { if (++$this->redirect_count >= $this->max_redirects) { $this->errormsg = 'Number of redirects exceeded maximum (' . $this->max_redirects . ')'; $this->debug($this->errormsg); $this->redirect_count = 0; return false; } $spa0d4cd = isset($this->headers['location']) ? $this->headers['location'] : ''; $spcc824e = isset($this->headers['uri']) ? $this->headers['uri'] : ''; if ($spa0d4cd || $spcc824e) { $sp59c732 = parse_url($spa0d4cd . $spcc824e); return $this->get($sp59c732['path']); } } return true; } function buildRequest() { $sp43c518 = array(); $sp43c518[] = "{$this->method} {$this->path} HTTP/1.0"; $sp43c518[] = "Host: {$this->host}"; $sp43c518[] = "User-Agent: {$this->user_agent}"; $sp43c518[] = "Accept: {$this->accept}"; if ($this->use_gzip) { $sp43c518[] = "Accept-encoding: {$this->accept_encoding}"; } $sp43c518[] = "Accept-language: {$this->accept_language}"; if ($this->referer) { $sp43c518[] = "Referer: {$this->referer}"; } if ($this->cookies) { $sp74b8e5 = 'Cookie: '; foreach ($this->cookies as $sp1e4b49 => $sp39a65f) { $sp74b8e5 .= "{$sp1e4b49}={$sp39a65f}; "; } $sp43c518[] = $sp74b8e5; } if ($this->username && $this->password) { $sp43c518[] = 'Authorization: BASIC ' . base64_encode($this->username . ':' . $this->password); } if ($this->postdata) { $sp43c518[] = 'Content-Type: application/x-www-form-urlencoded'; $sp43c518[] = 'Content-Length: ' . strlen($this->postdata); } $sp6a5e99 = implode('
', $sp43c518) . '

' . $this->postdata; return $sp6a5e99; } function getStatus() { return $this->status; } function getContent() { return $this->content; } function getHeaders() { return $this->headers; } function getHeader($spb8d34f) { $spb8d34f = strtolower($spb8d34f); if (isset($this->headers[$spb8d34f])) { return $this->headers[$spb8d34f]; } else { return false; } } function getError() { return $this->errormsg; } function getCookies() { return $this->cookies; } function getRequestURL() { $sp59c732 = 'http://' . $this->host; if ($this->port != 80) { $sp59c732 .= ':' . $this->port; } $sp59c732 .= $this->path; return $sp59c732; } function setUserAgent($sp6dba13) { $this->user_agent = $sp6dba13; } function setAuthorization($sp45fa90, $sp6d6784) { $this->username = $sp45fa90; $this->password = $sp6d6784; } function setCookies($spfee848) { $this->cookies = $spfee848; } function useGzip($spbc311a) { $this->use_gzip = $spbc311a; } function setPersistCookies($spbc311a) { $this->persist_cookies = $spbc311a; } function setPersistReferers($spbc311a) { $this->persist_referers = $spbc311a; } function setHandleRedirects($spbc311a) { $this->handle_redirects = $spbc311a; } function setMaxRedirects($sp2cf77a) { $this->max_redirects = $sp2cf77a; } function setHeadersOnly($spbc311a) { $this->headers_only = $spbc311a; } function setDebug($spbc311a) { $this->debug = $spbc311a; } function quickGet($sp59c732) { $spd9f7a0 = parse_url($sp59c732); $sp43ee63 = $spd9f7a0['host']; $sp490008 = isset($spd9f7a0['port']) ? $spd9f7a0['port'] : 80; $sp8157ee = isset($spd9f7a0['path']) ? $spd9f7a0['path'] : '/'; if (isset($spd9f7a0['query'])) { $sp8157ee .= '?' . $spd9f7a0['query']; } $spb26a9e = new HttpClient($sp43ee63, $sp490008); if (!$spb26a9e->get($sp8157ee)) { return false; } else { return $spb26a9e->getContent(); } } static function quickPost($sp59c732, $sp69c4ce) { $spd9f7a0 = parse_url($sp59c732); $sp43ee63 = $spd9f7a0['host']; $sp490008 = isset($spd9f7a0['port']) ? $spd9f7a0['port'] : 80; $sp8157ee = isset($spd9f7a0['path']) ? $spd9f7a0['path'] : '/'; $spb26a9e = new HttpClient($sp43ee63, $sp490008); if (!$spb26a9e->post($sp8157ee, $sp69c4ce)) { return false; } else { return $spb26a9e->getContent(); } } function debug($sp3a6f3c, $spb63633 = false) { if ($this->debug) { print '<div style="border: 1px solid red; padding: 0.5em; margin: 0.5em;"><strong>HttpClient Debug:</strong> ' . $sp3a6f3c; if ($spb63633) { ob_start(); print_r($spb63633); $spe0838b = htmlentities(ob_get_contents()); ob_end_clean(); print '<pre>' . $spe0838b . '</pre>'; } print '</div>'; } } }