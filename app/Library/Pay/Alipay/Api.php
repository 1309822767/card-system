<?php
namespace App\Library\Pay\Alipay; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; private $pay_id; public function __construct($sp5d3f49) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp5d3f49; $this->url_return = SYS_URL . '/pay/return/' . $sp5d3f49; $this->pay_id = $sp5d3f49; } function goPay($spc8c9ef, $sp4510be, $sp930bb6, $sp9a31c1, $spfa6477) { $sp7918ab = sprintf('%.2f', $spfa6477 / 100); $sp2db4f5 = $this->buildAliConfig($spc8c9ef); require_once __DIR__ . '/sdk/alipay_submit.class.php'; $sp2db4f5['notify_url'] = $this->url_notify; $sp2db4f5['return_url'] = $this->url_return . '/' . $sp4510be; $sp4487be = array('service' => $sp2db4f5['service'], 'partner' => $sp2db4f5['partner'], 'seller_id' => $sp2db4f5['seller_id'], 'payment_type' => $sp2db4f5['payment_type'], 'notify_url' => $sp2db4f5['notify_url'], 'return_url' => $sp2db4f5['return_url'], 'out_trade_no' => $sp4510be, 'total_fee' => $sp7918ab, 'subject' => $sp930bb6, 'body' => $sp9a31c1, 'show_url' => config('app.url'), 'app_pay' => 'Y', '_input_charset' => 'utf-8'); $spce3021 = new \AlipaySubmit($sp2db4f5); $spb03475 = $spce3021->buildRequestForm($sp4487be, 'get', '确认'); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; echo $spb03475; } function verify($spc8c9ef, $sp53cf01) { $sp412d81 = isset($spc8c9ef['isNotify']) && $spc8c9ef['isNotify']; $sp2db4f5 = $this->buildAliConfig($spc8c9ef); require __DIR__ . '/sdk/alipay_notify.class.php'; $spa52997 = new \AlipayNotify($sp2db4f5); if ($sp412d81) { $sp820aff = $spa52997->verifyNotify(); } else { $sp820aff = $spa52997->verifyReturn(); } if ($sp820aff) { $sp4510be = $_REQUEST['out_trade_no']; $sp040923 = $_REQUEST['trade_no']; $spbe6b55 = $_REQUEST['trade_status']; $sp6f1ff6 = (int) round($_REQUEST['total_fee'] * 100); if ($spbe6b55 == 'TRADE_FINISHED' || $spbe6b55 == 'TRADE_SUCCESS') { $sp53cf01($sp4510be, $sp6f1ff6, $sp040923); } if ($sp412d81) { echo 'success'; } return true; } else { if ($sp412d81) { echo 'fail'; $sp0e4eec = 'payNotify pay_id: ' . $this->pay_id . ',Alipay'; } else { $sp0e4eec = 'payReturn pay_id: ' . $this->pay_id . ',Alipay'; } \Log::error($sp0e4eec . ' Alipay.Api.verify failed'); return false; } } private function buildAliConfig($spc8c9ef) { return array('partner' => $spc8c9ef['partner'], 'seller_id' => $spc8c9ef['partner'], 'key' => $spc8c9ef['key'], 'sign_type' => 'MD5', 'input_charset' => 'utf-8', 'cacert' => __DIR__ . DIRECTORY_SEPARATOR . 'cacert.pem', 'transport' => 'https', 'payment_type' => '1', 'service' => $spc8c9ef['payway'] === 'wap' ? 'alipay.wap.create.direct.pay.by.user' : 'create_direct_pay_by_user'); } }