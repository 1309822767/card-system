<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp6c33e6, $spfdb3a0) { $this->captcha_id = $sp6c33e6; $this->private_key = $spfdb3a0; } public function pre_process($sp9f2e5e = null) { $sp59c732 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp9f2e5e != null and is_string($sp9f2e5e)) { $sp59c732 = $sp59c732 . '&user_id=' . $sp9f2e5e; } $sp52dc1f = $this->send_request($sp59c732); if (strlen($sp52dc1f) != 32) { $this->failback_process(); return 0; } $this->success_process($sp52dc1f); return 1; } private function success_process($sp52dc1f) { $sp52dc1f = md5($sp52dc1f . $this->private_key); $sp820aff = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp52dc1f); $this->response = $sp820aff; } private function failback_process() { $spf42622 = md5(rand(0, 100)); $sp3dae9b = md5(rand(0, 100)); $sp52dc1f = $spf42622 . substr($sp3dae9b, 0, 2); $sp820aff = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp52dc1f); $this->response = $sp820aff; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp52dc1f, $sp6b5770, $sp2502c5, $sp9f2e5e = null) { if (!$this->check_validate($sp52dc1f, $sp6b5770)) { return 0; } $sp69c4ce = array('seccode' => $sp2502c5, 'sdk' => self::GT_SDK_VERSION); if ($sp9f2e5e != null and is_string($sp9f2e5e)) { $sp69c4ce['user_id'] = $sp9f2e5e; } $sp59c732 = 'http://api.geetest.com/validate.php'; $sp2927c7 = $this->post_request($sp59c732, $sp69c4ce); if ($sp2927c7 == md5($sp2502c5)) { return 1; } else { if ($sp2927c7 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp52dc1f, $sp6b5770, $sp2502c5) { if ($sp6b5770) { $sp39a65f = explode('_', $sp6b5770); try { $sp8d8503 = $this->decode_response($sp52dc1f, $sp39a65f['0']); $sp45454a = $this->decode_response($sp52dc1f, $sp39a65f['1']); $spf309ef = $this->decode_response($sp52dc1f, $sp39a65f['2']); $sp481f12 = $this->get_failback_pic_ans($sp45454a, $spf309ef); $sp5f0355 = abs($sp8d8503 - $sp481f12); } catch (\Exception $spbcc446) { return 1; } if ($sp5f0355 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp52dc1f, $sp6b5770) { if (strlen($sp6b5770) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp52dc1f) != $sp6b5770) { return false; } return true; } private function send_request($sp59c732) { if (function_exists('curl_exec')) { $sp72f257 = curl_init(); curl_setopt($sp72f257, CURLOPT_URL, $sp59c732); curl_setopt($sp72f257, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp72f257, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp72f257, CURLOPT_RETURNTRANSFER, 1); $sp69c4ce = curl_exec($sp72f257); if (curl_errno($sp72f257)) { $sp6d6cfd = sprintf('curl[%s] error[%s]', $sp59c732, curl_errno($sp72f257) . ':' . curl_error($sp72f257)); $this->triggerError($sp6d6cfd); } curl_close($sp72f257); } else { $sp631695 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spb46ecb = stream_context_create($sp631695); $sp69c4ce = file_get_contents($sp59c732, false, $spb46ecb); } return $sp69c4ce; } private function post_request($sp59c732, $spc9e149 = '') { if (!$spc9e149) { return false; } $sp69c4ce = http_build_query($spc9e149); if (function_exists('curl_exec')) { $sp72f257 = curl_init(); curl_setopt($sp72f257, CURLOPT_URL, $sp59c732); curl_setopt($sp72f257, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp72f257, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp72f257, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$spc9e149) { curl_setopt($sp72f257, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp72f257, CURLOPT_POST, 1); curl_setopt($sp72f257, CURLOPT_POSTFIELDS, $sp69c4ce); } $sp69c4ce = curl_exec($sp72f257); if (curl_errno($sp72f257)) { $sp6d6cfd = sprintf('curl[%s] error[%s]', $sp59c732, curl_errno($sp72f257) . ':' . curl_error($sp72f257)); $this->triggerError($sp6d6cfd); } curl_close($sp72f257); } else { if ($spc9e149) { $sp631695 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp69c4ce) . '
', 'content' => $sp69c4ce, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spb46ecb = stream_context_create($sp631695); $sp69c4ce = file_get_contents($sp59c732, false, $spb46ecb); } } return $sp69c4ce; } private function decode_response($sp52dc1f, $sp6dba13) { if (strlen($sp6dba13) > 100) { return 0; } $sp1e4b49 = array(); $spfade97 = array(); $sp74d669 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp8e7e1d = 0; $sp57fbf9 = 0; $sp2aead6 = str_split($sp52dc1f); $sp55c4df = str_split($sp6dba13); for ($spf69b52 = 0; $spf69b52 < strlen($sp52dc1f); $spf69b52++) { $sp1b8ac8 = $sp2aead6[$spf69b52]; if (in_array($sp1b8ac8, $spfade97)) { continue; } else { $sp39a65f = $sp74d669[$sp8e7e1d % 5]; array_push($spfade97, $sp1b8ac8); $sp8e7e1d++; $sp1e4b49[$sp1b8ac8] = $sp39a65f; } } for ($spa68871 = 0; $spa68871 < strlen($sp6dba13); $spa68871++) { $sp57fbf9 += $sp1e4b49[$sp55c4df[$spa68871]]; } $sp57fbf9 = $sp57fbf9 - $this->decodeRandBase($sp52dc1f); return $sp57fbf9; } private function get_x_pos_from_str($spb1fb71) { if (strlen($spb1fb71) != 5) { return 0; } $sp78806f = 0; $sp86997b = 200; $sp78806f = base_convert($spb1fb71, 16, 10); $sp820aff = $sp78806f % $sp86997b; $sp820aff = $sp820aff < 40 ? 40 : $sp820aff; return $sp820aff; } private function get_failback_pic_ans($sped2926, $sp2eb41e) { $sp949e6f = substr(md5($sped2926), 0, 9); $spcecdf6 = substr(md5($sp2eb41e), 10, 9); $sp78f34b = ''; for ($spf69b52 = 0; $spf69b52 < 9; $spf69b52++) { if ($spf69b52 % 2 == 0) { $sp78f34b = $sp78f34b . $sp949e6f[$spf69b52]; } elseif ($spf69b52 % 2 == 1) { $sp78f34b = $sp78f34b . $spcecdf6[$spf69b52]; } } $sp90b604 = substr($sp78f34b, 4, 5); $sp481f12 = $this->get_x_pos_from_str($sp90b604); return $sp481f12; } private function decodeRandBase($sp52dc1f) { $spca74ab = substr($sp52dc1f, 32, 2); $sp9ca679 = array(); for ($spf69b52 = 0; $spf69b52 < strlen($spca74ab); $spf69b52++) { $spdfe669 = ord($spca74ab[$spf69b52]); $sp820aff = $spdfe669 > 57 ? $spdfe669 - 87 : $spdfe669 - 48; array_push($sp9ca679, $sp820aff); } $sp7a1d89 = $sp9ca679['0'] * 36 + $sp9ca679['1']; return $sp7a1d89; } private function triggerError($sp6d6cfd) { } }