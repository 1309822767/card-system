<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($spa4ec12, $sp2e7c1d) { $this->captcha_id = $spa4ec12; $this->private_key = $sp2e7c1d; } public function pre_process($sp7652a3 = null) { $sp81923e = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp7652a3 != null and is_string($sp7652a3)) { $sp81923e = $sp81923e . '&user_id=' . $sp7652a3; } $spf4e3af = $this->send_request($sp81923e); if (strlen($spf4e3af) != 32) { $this->failback_process(); return 0; } $this->success_process($spf4e3af); return 1; } private function success_process($spf4e3af) { $spf4e3af = md5($spf4e3af . $this->private_key); $spe62cd8 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $spf4e3af); $this->response = $spe62cd8; } private function failback_process() { $speefdd4 = md5(rand(0, 100)); $spe579ee = md5(rand(0, 100)); $spf4e3af = $speefdd4 . substr($spe579ee, 0, 2); $spe62cd8 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $spf4e3af); $this->response = $spe62cd8; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($spf4e3af, $sp759eea, $sp79c2a0, $sp7652a3 = null) { if (!$this->check_validate($spf4e3af, $sp759eea)) { return 0; } $spbda5b4 = array('seccode' => $sp79c2a0, 'sdk' => self::GT_SDK_VERSION); if ($sp7652a3 != null and is_string($sp7652a3)) { $spbda5b4['user_id'] = $sp7652a3; } $sp81923e = 'http://api.geetest.com/validate.php'; $spf268bb = $this->post_request($sp81923e, $spbda5b4); if ($spf268bb == md5($sp79c2a0)) { return 1; } else { if ($spf268bb == 'false') { return 0; } else { return 0; } } } public function fail_validate($spf4e3af, $sp759eea, $sp79c2a0) { if ($sp759eea) { $sp12919e = explode('_', $sp759eea); try { $sp078c1b = $this->decode_response($spf4e3af, $sp12919e['0']); $sp40c9d9 = $this->decode_response($spf4e3af, $sp12919e['1']); $sp0256bc = $this->decode_response($spf4e3af, $sp12919e['2']); $sp5f8072 = $this->get_failback_pic_ans($sp40c9d9, $sp0256bc); $spd41c9d = abs($sp078c1b - $sp5f8072); } catch (\Exception $sp019ea9) { return 1; } if ($spd41c9d < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($spf4e3af, $sp759eea) { if (strlen($sp759eea) != 32) { return false; } if (md5($this->private_key . 'geetest' . $spf4e3af) != $sp759eea) { return false; } return true; } private function send_request($sp81923e) { if (function_exists('curl_exec')) { $spd7a82f = curl_init(); curl_setopt($spd7a82f, CURLOPT_URL, $sp81923e); curl_setopt($spd7a82f, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spd7a82f, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spd7a82f, CURLOPT_RETURNTRANSFER, 1); $spbda5b4 = curl_exec($spd7a82f); if (curl_errno($spd7a82f)) { $sp165219 = sprintf('curl[%s] error[%s]', $sp81923e, curl_errno($spd7a82f) . ':' . curl_error($spd7a82f)); $this->triggerError($sp165219); } curl_close($spd7a82f); } else { $spcc5d58 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spec3bb7 = stream_context_create($spcc5d58); $spbda5b4 = file_get_contents($sp81923e, false, $spec3bb7); } return $spbda5b4; } private function post_request($sp81923e, $sp101b36 = '') { if (!$sp101b36) { return false; } $spbda5b4 = http_build_query($sp101b36); if (function_exists('curl_exec')) { $spd7a82f = curl_init(); curl_setopt($spd7a82f, CURLOPT_URL, $sp81923e); curl_setopt($spd7a82f, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spd7a82f, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spd7a82f, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp101b36) { curl_setopt($spd7a82f, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spd7a82f, CURLOPT_POST, 1); curl_setopt($spd7a82f, CURLOPT_POSTFIELDS, $spbda5b4); } $spbda5b4 = curl_exec($spd7a82f); if (curl_errno($spd7a82f)) { $sp165219 = sprintf('curl[%s] error[%s]', $sp81923e, curl_errno($spd7a82f) . ':' . curl_error($spd7a82f)); $this->triggerError($sp165219); } curl_close($spd7a82f); } else { if ($sp101b36) { $spcc5d58 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($spbda5b4) . '
', 'content' => $spbda5b4, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spec3bb7 = stream_context_create($spcc5d58); $spbda5b4 = file_get_contents($sp81923e, false, $spec3bb7); } } return $spbda5b4; } private function decode_response($spf4e3af, $spb81a87) { if (strlen($spb81a87) > 100) { return 0; } $spc37b44 = array(); $spcf93dc = array(); $sp4fbb1b = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp7548f9 = 0; $sp868884 = 0; $spb44700 = str_split($spf4e3af); $sp326067 = str_split($spb81a87); for ($sp218d20 = 0; $sp218d20 < strlen($spf4e3af); $sp218d20++) { $spe1403c = $spb44700[$sp218d20]; if (in_array($spe1403c, $spcf93dc)) { continue; } else { $sp12919e = $sp4fbb1b[$sp7548f9 % 5]; array_push($spcf93dc, $spe1403c); $sp7548f9++; $spc37b44[$spe1403c] = $sp12919e; } } for ($sp3dc13c = 0; $sp3dc13c < strlen($spb81a87); $sp3dc13c++) { $sp868884 += $spc37b44[$sp326067[$sp3dc13c]]; } $sp868884 = $sp868884 - $this->decodeRandBase($spf4e3af); return $sp868884; } private function get_x_pos_from_str($sp6c1040) { if (strlen($sp6c1040) != 5) { return 0; } $sp48ba14 = 0; $sp5cc2a3 = 200; $sp48ba14 = base_convert($sp6c1040, 16, 10); $spe62cd8 = $sp48ba14 % $sp5cc2a3; $spe62cd8 = $spe62cd8 < 40 ? 40 : $spe62cd8; return $spe62cd8; } private function get_failback_pic_ans($sp64edd3, $sp1b52ef) { $sp86f966 = substr(md5($sp64edd3), 0, 9); $sp012c69 = substr(md5($sp1b52ef), 10, 9); $spe72095 = ''; for ($sp218d20 = 0; $sp218d20 < 9; $sp218d20++) { if ($sp218d20 % 2 == 0) { $spe72095 = $spe72095 . $sp86f966[$sp218d20]; } elseif ($sp218d20 % 2 == 1) { $spe72095 = $spe72095 . $sp012c69[$sp218d20]; } } $sp33e67a = substr($spe72095, 4, 5); $sp5f8072 = $this->get_x_pos_from_str($sp33e67a); return $sp5f8072; } private function decodeRandBase($spf4e3af) { $spab79c5 = substr($spf4e3af, 32, 2); $spe2f6af = array(); for ($sp218d20 = 0; $sp218d20 < strlen($spab79c5); $sp218d20++) { $sp94aab1 = ord($spab79c5[$sp218d20]); $spe62cd8 = $sp94aab1 > 57 ? $sp94aab1 - 87 : $sp94aab1 - 48; array_push($spe2f6af, $spe62cd8); } $sp7d079c = $spe2f6af['0'] * 36 + $spe2f6af['1']; return $sp7d079c; } private function triggerError($sp165219) { } }