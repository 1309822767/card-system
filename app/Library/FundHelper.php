<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($spea8d79, callable $sp8fa42c) { $sp61541f = null; try { return DB::transaction(function () use($spea8d79, &$sp61541f, $sp8fa42c) { $sp61541f = \App\Order::where('id', $spea8d79)->lockForUpdate()->firstOrFail(); $sp6f1294 = $sp8fa42c($sp61541f); if ($sp6f1294 !== self::ACTION_CONTINUE) { return $sp6f1294; } $sp2b1668 = User::where('id', $sp61541f->user_id)->lockForUpdate()->firstOrFail(); $sp2b1668->m_all += $sp61541f->income; $sp2b1668->saveOrFail(); $sp13df98 = new FundRecord(); $sp13df98->user_id = $sp61541f->user_id; $sp13df98->type = FundRecord::TYPE_IN; $sp13df98->amount = $sp61541f->income; $sp13df98->all = $sp2b1668->m_all; $sp13df98->frozen = $sp2b1668->m_frozen; $sp13df98->paid = $sp2b1668->m_paid; $sp13df98->balance = $sp2b1668->m_balance; $sp13df98->remark = '订单#' . $sp61541f->order_no; $sp13df98->order_id = $sp61541f->id; $sp13df98->saveOrFail(); return true; }); } catch (\Throwable $spbcc446) { $sp3a6f3c = 'FundHelper.orderSuccess error, order_id:' . $spea8d79; if ($sp61541f) { $sp3a6f3c .= ', user_id:' . $sp61541f->user_id . ',income:' . $sp61541f->income . ',order_no:' . $sp61541f->order_no; } Log::error($sp3a6f3c . ' with exception:', array('Exception' => $spbcc446)); return false; } } public static function orderFreeze($spea8d79, $spee117f) { $sp61541f = null; try { return DB::transaction(function () use($spea8d79, &$sp61541f, $spee117f) { $sp61541f = \App\Order::where('id', $spea8d79)->lockForUpdate()->firstOrFail(); if ($sp61541f->status === Order::STATUS_REFUND) { return false; } if ($sp61541f->status === Order::STATUS_FROZEN) { return true; } $sp977040 = $sp61541f->status; if ($sp977040 === \App\Order::STATUS_SUCCESS) { $sp7a6ffb = '已发货'; } elseif ($sp977040 === \App\Order::STATUS_UNPAY) { $sp7a6ffb = '未付款'; } elseif ($sp977040 === \App\Order::STATUS_PAID) { $sp7a6ffb = '未发货'; } else { throw new \Exception('unknown'); } $sp2b1668 = User::where('id', $sp61541f->user_id)->lockForUpdate()->firstOrFail(); $sp13df98 = new FundRecord(); $sp13df98->user_id = $sp61541f->user_id; $sp13df98->type = FundRecord::TYPE_OUT; $sp13df98->order_id = $sp61541f->id; $sp13df98->remark = $sp61541f === $sp61541f ? '' : '关联订单#' . $sp61541f->order_no . ': '; if ($sp977040 === \App\Order::STATUS_SUCCESS) { $sp2b1668->m_frozen += $sp61541f->income; $sp2b1668->saveOrFail(); $sp13df98->amount = -$sp61541f->income; $sp13df98->remark .= $spee117f . ', 冻结订单#' . $sp61541f->order_no; } else { $sp13df98->amount = 0; $sp13df98->remark .= $spee117f . ', 冻结订单(' . $sp7a6ffb . ')#' . $sp61541f->order_no; } $sp13df98->all = $sp2b1668->m_all; $sp13df98->frozen = $sp2b1668->m_frozen; $sp13df98->paid = $sp2b1668->m_paid; $sp13df98->balance = $sp2b1668->m_balance; $sp13df98->saveOrFail(); $sp61541f->status = \App\Order::STATUS_FROZEN; $sp61541f->frozen_reason = ($sp61541f === $sp61541f ? '' : '关联订单#' . $sp61541f->order_no . ': ') . $spee117f; $sp61541f->saveOrFail(); return true; }); } catch (\Throwable $spbcc446) { $sp3a6f3c = 'FundHelper.orderFreeze error'; if ($sp61541f) { $sp3a6f3c .= ', order_no:' . $sp61541f->order_no . ', user_id:' . $sp61541f->user_id . ', amount:' . $sp61541f->income; } else { $sp3a6f3c .= ', order_no: null'; } Log::error($sp3a6f3c . ' with exception:', array('Exception' => $spbcc446)); return false; } } public static function orderUnfreeze($spea8d79, $sp2799a8, callable $sp785dc9 = null, &$sp336c9d = null) { $sp61541f = null; try { return DB::transaction(function () use($spea8d79, &$sp61541f, $sp2799a8, $sp785dc9, &$sp336c9d) { $sp61541f = \App\Order::where('id', $spea8d79)->lockForUpdate()->firstOrFail(); if ($sp785dc9 !== null) { $sp6f1294 = $sp785dc9(); if ($sp6f1294 !== self::ACTION_CONTINUE) { return $sp6f1294; } } if ($sp61541f->status === Order::STATUS_REFUND) { $sp336c9d = $sp61541f->status; return false; } if ($sp61541f->status !== Order::STATUS_FROZEN) { $sp336c9d = $sp61541f->status; return true; } $sp1ee3bb = $sp61541f->card_orders()->exists(); if ($sp1ee3bb) { $sp336c9d = \App\Order::STATUS_SUCCESS; $sp7a6ffb = '已发货'; } else { if ($sp61541f->paid_at === NULL) { $sp336c9d = \App\Order::STATUS_UNPAY; $sp7a6ffb = '未付款'; } else { $sp336c9d = \App\Order::STATUS_PAID; $sp7a6ffb = '未发货'; } } $sp2b1668 = User::where('id', $sp61541f->user_id)->lockForUpdate()->firstOrFail(); $sp13df98 = new FundRecord(); $sp13df98->user_id = $sp61541f->user_id; $sp13df98->type = FundRecord::TYPE_IN; $sp13df98->remark = $sp61541f === $sp61541f ? '' : '关联订单#' . $sp61541f->order_no . ': '; $sp13df98->order_id = $sp61541f->id; if ($sp1ee3bb) { $sp2b1668->m_frozen -= $sp61541f->income; $sp2b1668->saveOrFail(); $sp13df98->amount = $sp61541f->income; $sp13df98->remark .= $sp2799a8 . ', 解冻订单#' . $sp61541f->order_no; } else { $sp13df98->amount = 0; $sp13df98->remark .= $sp2799a8 . ', 解冻订单(' . $sp7a6ffb . ')#' . $sp61541f->order_no; } $sp13df98->all = $sp2b1668->m_all; $sp13df98->frozen = $sp2b1668->m_frozen; $sp13df98->paid = $sp2b1668->m_paid; $sp13df98->balance = $sp2b1668->m_balance; $sp13df98->saveOrFail(); $sp61541f->status = $sp336c9d; $sp61541f->saveOrFail(); return true; }); } catch (\Throwable $spbcc446) { $sp3a6f3c = 'FundHelper.orderUnfreeze error'; if ($sp61541f) { $sp3a6f3c .= ', order_no:' . $sp61541f->order_no . ', user_id:' . $sp61541f->user_id . ',amount:' . $sp61541f->income; } else { $sp3a6f3c .= ', order_no: null'; } Log::error($sp3a6f3c . ' with exception:', array('Exception' => $spbcc446)); return false; } } }