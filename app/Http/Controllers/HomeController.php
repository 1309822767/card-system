<?php
namespace App\Http\Controllers; use App\Category; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($sp5b5487, $spcf070f = null, $sp69288e = null) { $spc6bf93 = array('url' => config('app.url'), 'company' => System::_get('company'), 'name' => config('app.name'), 'logo' => System::_get('logo')); $spc6bf93['shop'] = array('qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'bkg' => System::_get('shop_bkg'), 'inventory' => System::_getInt('shop_inventory')); if ($sp69288e) { $spc6bf93['categories'] = array($spcf070f); $spc6bf93['product'] = $sp69288e; $sp5cab35 = $sp69288e->name . ' - ' . $spc6bf93['name']; $sp847fdc = array(); preg_match_all('/"insert":"(.+?)"/', $sp69288e->description, $sp847fdc); $sp5f9c2f = str_replace('\\n', ' ', @join(' ', $sp847fdc[1])); } elseif ($spcf070f) { $spc6bf93['categories'] = array($spcf070f); $spc6bf93['product'] = null; $sp5cab35 = $spcf070f->name . ' - ' . $spc6bf93['name']; $sp5f9c2f = $spcf070f->name; } else { $sp2d40c3 = Category::where('user_id', $sp5b5487->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp2d40c3 as $spcf070f) { $spcf070f->setVisible(array('id', 'name', 'password_open')); } $spc6bf93['categories'] = $sp2d40c3; $sp5cab35 = $spc6bf93['name']; $sp5f9c2f = $spc6bf93['shop']['ann']; } $spc6bf93['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($spc6bf93['vcode']['driver'] === 'geetest') { $spc6bf93['vcode']['geetest'] = Geetest\API::get(); } $spc6bf93['pays'] = Pay::whereRaw('enabled&' . (self::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $sp190603 = Cookie::get('customer'); $sp6df092 = Cookie::make('customer', strlen($sp190603) !== 32 ? md5(str_random(16)) : $sp190603, 43200); $sp36682c = $sp5b5487->shop_template ? $sp5b5487->shop_template->id : 0; return response()->view('shop_template.' . $sp36682c . '.index', array('name' => $sp5cab35, 'keywords' => preg_replace('/[、，；。！？]/', ', ', $sp5cab35), 'description' => $sp5f9c2f, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $spc6bf93))->cookie($sp6df092); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/#/record">查询订单</a>')); } public function shop_user($sp808d0e) { $this->checkIsInMaintain(); $sp5b5487 = User::find(\App\UserDomain::id_decode($sp808d0e)); if (!$sp5b5487) { $sp5b5487 = User::where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->find($sp808d0e); } if (!$sp5b5487) { return $this->_shop_404(); } return $this->_shop_render($sp5b5487); } public function shop_category($sp2b88aa) { $this->checkIsInMaintain(); $spcf070f = Category::whereId(\App\Category::id_decode($sp2b88aa))->with('user')->first(); if (!$spcf070f) { $spcf070f = Category::whereId($sp2b88aa)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$spcf070f) { return $this->_shop_404(); } $spcf070f->setVisible(array('id', 'name', 'password_open')); return $this->_shop_render($spcf070f->user, $spcf070f); } public function shop_product(Request $spf631e6, $speec75b) { $this->checkIsInMaintain(); $sp69288e = Product::whereId(\App\Product::id_decode($speec75b))->with(array('user', 'category', 'cards' => function (Relation $spe8afa9) { $spe8afa9->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); if (!$sp69288e) { $sp69288e = Product::whereId($speec75b)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category', 'cards' => function (Relation $spe8afa9) { $spe8afa9->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); } if (!$sp69288e || !$sp69288e->category) { return $this->_shop_404(); } if ($sp69288e->password_open && $sp69288e->password !== $spf631e6->input('p')) { return view('message', array('title' => '出错', 'message' => ($spf631e6->has('p') ? '密码错误' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } $sp69288e->category->setVisible(array('id', 'name', 'password_open')); $sp69288e->setAttribute('count', count($sp69288e->cards) ? $sp69288e->cards[0]->count : 0); $sp69288e->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); return $this->_shop_render($sp69288e->user, $sp69288e->category, $sp69288e); } public function shop() { $this->checkIsInMaintain(); $sp5b5487 = User::firstOrFail(); return $this->_shop_render($sp5b5487); } public function admin() { $spc6bf93 = array(); $spc6bf93['url'] = config('app.url'); $spc6bf93['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => System::_get('vcode_login')); if ($spc6bf93['vcode']['driver'] === 'geetest') { $spc6bf93['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $spc6bf93)); } }