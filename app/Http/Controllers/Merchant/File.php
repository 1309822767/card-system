<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp90b6b6, $sp7652a3, $sp9d353a, $spe97890 = false) { if (!$sp90b6b6 || !in_array(strtolower($sp90b6b6->extension()), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp90b6b6->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp136037 = $sp90b6b6->store($sp9d353a, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp019ea9) { \Log::error('File.uploadImg folder:' . $sp9d353a . ', error:' . $sp019ea9->getMessage(), array('exception' => $sp019ea9)); if (config('app.debug')) { return Response::fail($sp019ea9->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp136037) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp35934a = System::_get('storage_driver'); $sp81923e = Storage::disk($sp35934a)->url($sp136037); $spc59422 = \App\File::insertGetId(array('user_id' => $sp7652a3, 'driver' => $sp35934a, 'path' => $sp136037, 'url' => $sp81923e)); if ($spc59422 < 1) { Storage::disk($sp35934a)->delete($sp136037); return Response::fail('数据库繁忙，请稍后再试'); } $sp567373 = array('id' => $spc59422, 'url' => $sp81923e, 'name' => pathinfo($sp136037, PATHINFO_BASENAME)); if ($spe97890) { return $sp567373; } return Response::success($sp567373); } function upload_merchant(Request $spf631e6) { $sp5b5487 = $this->getUser($spf631e6); if ($sp5b5487 === null) { return Response::forbidden('无效的用户'); } $sp90b6b6 = $spf631e6->file('file'); return $this->uploadImg($sp90b6b6, $sp5b5487->id, \App\File::getProductFolder()); } public function renderImage(Request $spf631e6, $sp3c2137) { if (str_contains($sp3c2137, '..') || str_contains($sp3c2137, './') || str_contains($sp3c2137, '.\\') || !starts_with($sp3c2137, 'images/')) { $sp0724c1 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp3c2137 = str_replace('\\', '/', $sp3c2137); $sp90b6b6 = \App\File::wherePath($sp3c2137)->first(); if ($sp90b6b6) { $sp35934a = $sp90b6b6->driver; } else { $sp35934a = System::_get('storage_driver'); } if (!in_array($sp35934a, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp0724c1 = Storage::disk($sp35934a)->get($sp3c2137); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp019ea9) { \Log::error('File.renderImage error: ' . $sp019ea9->getMessage(), array('exception' => $sp019ea9)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp3c2137)); die($sp0724c1); } function renderQRCode(Request $spf631e6, $spc59422) { $sp90b6b6 = \App\File::find($spc59422); if ($sp90b6b6 == null || !$this->isAdmin() && $sp90b6b6->user_id !== Auth::id()) { return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } return response()->redirectTo($sp90b6b6->url); } }