<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp6a5e99) { $sp7a245d = $this->authQuery($sp6a5e99, \App\Coupon::class)->with(array('category' => function ($sp7a245d) { $sp7a245d->select(array('id', 'name')); }))->with(array('product' => function ($sp7a245d) { $sp7a245d->select(array('id', 'name')); })); $sp1f1bef = $sp6a5e99->post('search', false); $sp694818 = $sp6a5e99->post('val', false); if ($sp1f1bef && $sp694818) { if ($sp1f1bef == 'id') { $sp7a245d->where('id', $sp694818); } else { $sp7a245d->where($sp1f1bef, 'like', '%' . $sp694818 . '%'); } } $sp0e6d39 = (int) $sp6a5e99->post('category_id'); $spcf7e6d = $sp6a5e99->post('product_id', -1); if ($sp0e6d39 > 0) { if ($spcf7e6d > 0) { $sp7a245d->where('product_id', $spcf7e6d); } else { $sp7a245d->where('category_id', $sp0e6d39); } } $spf9795c = $sp6a5e99->post('status'); if (strlen($spf9795c)) { $sp7a245d->whereIn('status', explode(',', $spf9795c)); } $sp8f02bb = $sp6a5e99->post('type'); if (strlen($sp8f02bb)) { $sp7a245d->whereIn('type', explode(',', $sp8f02bb)); } $sp7a245d->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spcbdc33 = $sp6a5e99->post('current_page', 1); $spb4a524 = $sp6a5e99->post('per_page', 20); $sp00e9d2 = $sp7a245d->paginate($spb4a524, array('*'), 'page', $spcbdc33); return Response::success($sp00e9d2); } function create(Request $sp6a5e99) { $sp8e7e1d = $sp6a5e99->post('count', 0); $sp8f02bb = (int) $sp6a5e99->post('type', \App\Coupon::TYPE_ONETIME); $sp5e59ed = $sp6a5e99->post('expire_at'); $sp2bcf28 = (int) $sp6a5e99->post('discount_val'); $sp7b8706 = (int) $sp6a5e99->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp113942 = $sp6a5e99->post('remark'); if ($sp7b8706 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp2bcf28 < 1 || $sp2bcf28 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp7b8706 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp2bcf28 < 1 || $sp2bcf28 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp0e6d39 = (int) $sp6a5e99->post('category_id', -1); $spcf7e6d = (int) $sp6a5e99->post('product_id', -1); if ($sp8f02bb === \App\Coupon::TYPE_REPEAT) { $spe16253 = $sp6a5e99->post('coupon'); if (!$spe16253) { $spe16253 = strtoupper(str_random()); } $spfa0fd3 = new \App\Coupon(); $spfa0fd3->user_id = $this->getUserIdOrFail($sp6a5e99); $spfa0fd3->category_id = $sp0e6d39; $spfa0fd3->product_id = $spcf7e6d; $spfa0fd3->coupon = $spe16253; $spfa0fd3->type = $sp8f02bb; $spfa0fd3->discount_val = $sp2bcf28; $spfa0fd3->discount_type = $sp7b8706; $spfa0fd3->count_all = (int) $sp6a5e99->post('count_all', 1); if ($spfa0fd3->count_all < 1 || $spfa0fd3->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $spfa0fd3->expire_at = $sp5e59ed; $spfa0fd3->saveOrFail(); return Response::success(array($spfa0fd3->coupon)); } elseif ($sp8f02bb === \App\Coupon::TYPE_ONETIME) { if (!$sp8e7e1d) { return Response::forbidden('请输入生成数量'); } if ($sp8e7e1d > 100) { return Response::forbidden('每次生成不能大于100张'); } $spd94cd9 = array(); $sp5e4474 = array(); $sp9f2e5e = $this->getUserIdOrFail($sp6a5e99); $sp9d4e0c = Carbon::now(); for ($spf69b52 = 0; $spf69b52 < $sp8e7e1d; $spf69b52++) { $spfa0fd3 = strtoupper(str_random()); $sp5e4474[] = $spfa0fd3; $spd94cd9[] = array('user_id' => $sp9f2e5e, 'coupon' => $spfa0fd3, 'category_id' => $sp0e6d39, 'product_id' => $spcf7e6d, 'type' => $sp8f02bb, 'discount_val' => $sp2bcf28, 'discount_type' => $sp7b8706, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp113942, 'created_at' => $sp9d4e0c, 'expire_at' => $sp5e59ed); } \App\Coupon::insert($spd94cd9); return Response::success($sp5e4474); } else { return Response::forbidden('unknown type: ' . $sp8f02bb); } } function edit(Request $sp6a5e99) { $sp5d3f49 = (int) $sp6a5e99->post('id'); $spe16253 = $sp6a5e99->post('coupon'); $sp0e6d39 = (int) $sp6a5e99->post('category_id', -1); $spcf7e6d = (int) $sp6a5e99->post('product_id', -1); $sp5e59ed = $sp6a5e99->post('expire_at', NULL); $spf9795c = (int) $sp6a5e99->post('status', \App\Coupon::STATUS_NORMAL); $sp8f02bb = (int) $sp6a5e99->post('type', \App\Coupon::TYPE_ONETIME); $sp2bcf28 = (int) $sp6a5e99->post('discount_val'); $sp7b8706 = (int) $sp6a5e99->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp7b8706 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp2bcf28 < 1 || $sp2bcf28 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp7b8706 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp2bcf28 < 1 || $sp2bcf28 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $spfa0fd3 = $this->authQuery($sp6a5e99, \App\Coupon::class)->find($sp5d3f49); if ($spfa0fd3) { $spfa0fd3->coupon = $spe16253; $spfa0fd3->category_id = $sp0e6d39; $spfa0fd3->product_id = $spcf7e6d; $spfa0fd3->status = $spf9795c; $spfa0fd3->type = $sp8f02bb; $spfa0fd3->discount_val = $sp2bcf28; $spfa0fd3->discount_type = $sp7b8706; if ($sp8f02bb === \App\Coupon::TYPE_REPEAT) { $spfa0fd3->count_all = (int) $sp6a5e99->post('count_all', 1); if ($spfa0fd3->count_all < 1 || $spfa0fd3->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp5e59ed) { $spfa0fd3->expire_at = $sp5e59ed; } $spfa0fd3->saveOrFail(); } else { $spdfabbd = explode('
', $spe16253); for ($spf69b52 = 0; $spf69b52 < count($spdfabbd); $spf69b52++) { $sp4a1133 = str_replace('', '', trim($spdfabbd[$spf69b52])); $spfa0fd3 = new \App\Coupon(); $spfa0fd3->coupon = $sp4a1133; $spfa0fd3->category_id = $sp0e6d39; $spfa0fd3->product_id = $spcf7e6d; $spfa0fd3->status = $spf9795c; $spfa0fd3->type = $sp8f02bb; $spfa0fd3->discount_val = $sp2bcf28; $spfa0fd3->discount_type = $sp7b8706; $spdfabbd[$spf69b52] = $spfa0fd3; } \App\Product::find($spcf7e6d)->coupons()->saveMany($spdfabbd); } return Response::success(); } function enable(Request $sp6a5e99) { $this->validate($sp6a5e99, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $spe7e110 = $sp6a5e99->post('ids'); $spcd92c8 = (int) $sp6a5e99->post('enabled'); $this->authQuery($sp6a5e99, \App\Coupon::class)->whereIn('id', explode(',', $spe7e110))->update(array('enabled' => $spcd92c8)); return Response::success(); } function delete(Request $sp6a5e99) { $this->validate($sp6a5e99, array('ids' => 'required|string')); $spe7e110 = $sp6a5e99->post('ids'); $this->authQuery($sp6a5e99, \App\Coupon::class)->whereIn('id', explode(',', $spe7e110))->delete(); return Response::success(); } }