<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $spf631e6) { $sp23531a = (int) $spf631e6->post('category_id'); if (!$sp23531a) { return Response::forbidden('请选择商品分类'); } $spcf070f = \App\Category::where('id', $sp23531a)->first(); if (!$spcf070f) { return Response::forbidden('商品分类未找到'); } if ($spcf070f->password_open && $spf631e6->post('password') !== $spcf070f->password) { return Response::fail('分类密码输入错误'); } $sp802daa = \App\Product::where('category_id', $sp23531a)->where('enabled', 1)->with(array('cards' => function (Relation $spe8afa9) { $spe8afa9->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->orderBy('sort')->get(); foreach ($sp802daa as $sp69288e) { $sp69288e->setAttribute('count', count($sp69288e->cards) ? $sp69288e->cards[0]->count : 0); $sp69288e->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); } return Response::success($sp802daa); } function verifyPassword(Request $spf631e6) { $spa20daf = (int) $spf631e6->post('product_id'); if (!$spa20daf) { return Response::forbidden('请选择商品'); } $sp69288e = \App\Product::where('id', $spa20daf)->first(); if (!$sp69288e) { return Response::forbidden('商品未找到'); } if ($sp69288e->password_open && $spf631e6->post('password') !== $sp69288e->password) { return Response::fail('商品密码输入错误'); } return Response::success(); } }