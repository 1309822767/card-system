<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp6a5e99) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp6f1294 = Geetest\API::verify($sp6a5e99->post('geetest_challenge'), $sp6a5e99->post('geetest_validate'), $sp6a5e99->post('geetest_seccode')); if (!$sp6f1294) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp7a245d = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp8f02bb = $sp6a5e99->post('type', ''); if ($sp8f02bb === 'cookie') { $sp7b3b78 = Cookie::get('customer'); if (strlen($sp7b3b78) !== 32) { return Response::success(); } $sp7a245d->where('customer', $sp7b3b78); } elseif ($sp8f02bb === 'order_no') { $sp51ee1d = $sp6a5e99->post('order_no', ''); if (strlen($sp51ee1d) !== 19) { return Response::success(); } $sp7a245d->where('order_no', $sp51ee1d); } elseif ($sp8f02bb === 'email') { $sp9dc949 = $sp6a5e99->post('email', ''); if (strlen($sp9dc949) < 6) { return Response::success(); } $sp7a245d->where('email', $sp9dc949); } else { return Response::fail('请选择查询类型'); } $sp00e9d2 = $sp7a245d->orderBy('id', 'DESC')->get(array('id', 'created_at', 'order_no', 'email', 'status', 'count', 'paid')); $sp8645f9 = ''; return Response::success(array('list' => $sp00e9d2, 'msg' => count($sp00e9d2) ? $sp8645f9 : '')); } }