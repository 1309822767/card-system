<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Geetest; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Hash; class Login extends Controller { function getVerify() { $sp1efcc0 = array('driver' => 'geetest', 'geetest' => Geetest\API::get()); return Response::success($sp1efcc0); } public function login(Request $sp6a5e99) { if ((int) \App\System::_get('vcode_login') === 1) { $sp6f1294 = Geetest\API::verify($sp6a5e99->post('gt_c'), $sp6a5e99->post('gt_v'), $sp6a5e99->post('gt_s')); if (!$sp6f1294) { return Response::fail('滑动验证超时，请返回页面重试。'); } } $sp0a9619 = $sp6a5e99->input('remember') == 'true'; if (!Auth::attempt(array('email' => $sp6a5e99->input('email'), 'password' => $sp6a5e99->input('password')), $sp0a9619)) { return Response::fail('邮箱或密码错误, 请检查'); } else { $sp918af4 = new \App\Log(); $sp918af4->user_id = Auth::Id(); $sp918af4->ip = Helper::getIP(); $sp918af4->action = \App\Log::ACTION_LOGIN; $sp918af4->save(); $sp2b1668 = Auth::getUser(); $sp2b1668->addHidden(array('created_at', 'updated_at')); return Response::success(array('token' => 'login', 'user' => $sp2b1668->toArray())); } } function info() { $sp2b1668 = Auth::getUser(); $sp2b1668->addHidden(array('created_at', 'updated_at')); $sp2b1668->setAttribute('shop_name', \App\System::_get('app_name')); return Response::success(array('token' => 'login', 'user' => $sp2b1668->toArray())); } function logout(Request $sp6a5e99) { @Auth::logout(); return Response::success(); } function changePassword(Request $sp6a5e99) { $sp2b1668 = Auth::getUser(); $spc5dd0c = $sp6a5e99->post('old', null); $sp6d6784 = $sp6a5e99->post('password', null); if (strlen($sp6d6784) < 6 || strlen($sp6d6784) > 32) { return Response::fail('请输入6-32位密码'); } if (!Hash::check($spc5dd0c, $sp2b1668->password)) { return Response::fail('旧密码错误，请检查'); } $sp2b1668->password = Hash::make($sp6d6784); $sp2b1668->setRememberToken(str_random(60)); $sp2b1668->saveOrFail(); event(new PasswordReset($sp2b1668)); Auth::guard()->login($sp2b1668); return Response::success(); } }