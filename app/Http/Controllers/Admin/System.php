<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Mail; class System extends Controller { private function set(Request $sp6a5e99, $spd725d5) { foreach ($spd725d5 as $sp535158) { if ($sp6a5e99->has($sp535158)) { \App\System::_set($sp535158, $sp6a5e99->post($sp535158)); } } } private function setMoney(Request $sp6a5e99, $spd725d5) { foreach ($spd725d5 as $sp535158) { if ($sp6a5e99->has($sp535158)) { \App\System::_set($sp535158, (int) round($sp6a5e99->post($sp535158) * 100)); } } } private function setInt(Request $sp6a5e99, $spd725d5) { foreach ($spd725d5 as $sp535158) { if ($sp6a5e99->has($sp535158)) { \App\System::_set($sp535158, (int) $sp6a5e99->post($sp535158)); } } } function setItem(Request $sp6a5e99) { $sp535158 = $sp6a5e99->post('name'); $sp39a65f = $sp6a5e99->post('value'); if (!$sp535158 || !$sp39a65f) { return Response::forbidden(); } \App\System::_set($sp535158, $sp39a65f); return Response::success(); } function info(Request $sp6a5e99) { $sp0ccc19 = array('app_name', 'app_title', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'js_tj', 'js_kf'); $spf34854 = array('shop_inventory'); if ($sp6a5e99->isMethod('GET')) { $spc8c9ef = array(); foreach ($sp0ccc19 as $sp535158) { $spc8c9ef[$sp535158] = \App\System::_get($sp535158); } foreach ($spf34854 as $sp535158) { $spc8c9ef[$sp535158] = (int) \App\System::_get($sp535158); } return Response::success($spc8c9ef); } $sp59c732 = array('app_url' => Helper::format_url($_POST['app_url']), 'app_url_api' => Helper::format_url($_POST['app_url_api'])); $sp6a5e99->merge($sp59c732); $this->set($sp6a5e99, $sp0ccc19); $this->setInt($sp6a5e99, $spf34854); return Response::success(); } function theme(Request $sp6a5e99) { if ($sp6a5e99->isMethod('GET')) { \App\ShopTheme::freshList(); return Response::success(array('themes' => \App\ShopTheme::get(), 'default' => \App\ShopTheme::defaultTheme()->name)); } $sp686c09 = $sp6a5e99->post('shop_theme'); if (!\App\ShopTheme::whereName($sp686c09)->exists()) { return Response::fail(); } \App\System::_set('shop_theme_default', $sp686c09); \App\ShopTheme::each(function (\App\ShopTheme $spbcc446) use($sp6a5e99) { if ($spbcc446->name === 'Material') { $spbcc446->config = array('list_type' => $sp6a5e99->post('shop_theme_material_list_type'), 'background' => $sp6a5e99->post('shop_theme_material_background')); $spbcc446->saveOrFail(); } if ($spbcc446->name === 'Classic') { $spbcc446->config = array('list_type' => $sp6a5e99->post('shop_theme_classic_list_type')); $spbcc446->saveOrFail(); } }); return Response::success(); } function order(Request $sp6a5e99) { $spd725d5 = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($sp6a5e99->isMethod('GET')) { $spc8c9ef = array(); foreach ($spd725d5 as $sp535158) { $spc8c9ef[$sp535158] = (int) \App\System::_get($sp535158); } return Response::success($spc8c9ef); } $this->setInt($sp6a5e99, $spd725d5); return Response::success(); } function vcode(Request $sp6a5e99) { $sp0ccc19 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $spf34854 = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($sp6a5e99->isMethod('GET')) { $spc8c9ef = array(); foreach ($sp0ccc19 as $sp535158) { $spc8c9ef[$sp535158] = \App\System::_get($sp535158); } foreach ($spf34854 as $sp535158) { $spc8c9ef[$sp535158] = (int) \App\System::_get($sp535158); } return Response::success($spc8c9ef); } $this->set($sp6a5e99, $sp0ccc19); $this->setInt($sp6a5e99, $spf34854); return Response::success(); } function email(Request $sp6a5e99) { $sp0ccc19 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $spf34854 = array('mail_send_order'); if ($sp6a5e99->isMethod('GET')) { $spc8c9ef = array(); foreach ($sp0ccc19 as $sp535158) { $spc8c9ef[$sp535158] = \App\System::_get($sp535158); } foreach ($spf34854 as $sp535158) { $spc8c9ef[$sp535158] = (int) \App\System::_get($sp535158); } return Response::success($spc8c9ef); } $this->set($sp6a5e99, $sp0ccc19); $this->setInt($sp6a5e99, $spf34854); return Response::success(); } function storage(Request $sp6a5e99) { $sp0ccc19 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $spf34854 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($sp6a5e99->isMethod('GET')) { $spc8c9ef = array(); foreach ($sp0ccc19 as $sp535158) { $spc8c9ef[$sp535158] = \App\System::_get($sp535158); } foreach ($spf34854 as $sp535158) { $spc8c9ef[$sp535158] = (int) \App\System::_get($sp535158); } return Response::success($spc8c9ef); } $this->set($sp6a5e99, $sp0ccc19); $this->set($sp6a5e99, $spf34854); return Response::success(); } function emailTest(Request $sp6a5e99) { $this->validate($sp6a5e99, array('to' => 'required')); $sp977552 = $sp6a5e99->post('to'); try { $sp6f1294 = Mail::to($sp977552)->send(new \App\Mail\Test()); return Response::success($sp6f1294); } catch (\Throwable $spbcc446) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $spbcc446->getMessage()); return Response::fail($spbcc446->getMessage(), $spbcc446); } } function orderClean(Request $sp6a5e99) { $this->validate($sp6a5e99, array('day' => 'required|integer|min:1')); $sp73a9ec = (int) $sp6a5e99->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp73a9ec))->delete(); return Response::success(); } }