<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class System extends Controller { private function set(Request $spf631e6, $spfa27f0) { foreach ($spfa27f0 as $sp5cab35) { if ($spf631e6->has($sp5cab35)) { \App\System::_set($sp5cab35, $spf631e6->post($sp5cab35)); } } } private function setMoney(Request $spf631e6, $spfa27f0) { foreach ($spfa27f0 as $sp5cab35) { if ($spf631e6->has($sp5cab35)) { \App\System::_set($sp5cab35, intval($spf631e6->post($sp5cab35) * 100)); } } } private function setInt(Request $spf631e6, $spfa27f0) { foreach ($spfa27f0 as $sp5cab35) { if ($spf631e6->has($sp5cab35)) { \App\System::_set($sp5cab35, (int) $spf631e6->post($sp5cab35)); } } } function setItem(Request $spf631e6) { $sp5cab35 = $spf631e6->post('name'); $sp12919e = $spf631e6->post('value'); if (!$sp5cab35 || !$sp12919e) { return Response::forbidden(); } \App\System::_set($sp5cab35, $sp12919e); return Response::success(); } function info(Request $spf631e6) { $spd3048b = array('app_name', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_bkg', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'js_tj', 'js_kf'); $sp65da9a = array('shop_inventory'); if ($spf631e6->isMethod('GET')) { $spc6bf93 = array(); foreach ($spd3048b as $sp5cab35) { $spc6bf93[$sp5cab35] = \App\System::_get($sp5cab35); } foreach ($sp65da9a as $sp5cab35) { $spc6bf93[$sp5cab35] = (int) \App\System::_get($sp5cab35); } return Response::success($spc6bf93); } $_POST['app_url'] = Helper::formatUrl($_POST['app_url']); $_POST['app_url_api'] = Helper::formatUrl($_POST['app_url_api']); $this->set($spf631e6, $spd3048b); $this->setInt($spf631e6, $sp65da9a); return Response::success(); } function order(Request $spf631e6) { $spfa27f0 = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($spf631e6->isMethod('GET')) { $spc6bf93 = array(); foreach ($spfa27f0 as $sp5cab35) { $spc6bf93[$sp5cab35] = (int) \App\System::_get($sp5cab35); } return Response::success($spc6bf93); } $this->setInt($spf631e6, $spfa27f0); return Response::success(); } function vcode(Request $spf631e6) { $spd3048b = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp65da9a = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($spf631e6->isMethod('GET')) { $spc6bf93 = array(); foreach ($spd3048b as $sp5cab35) { $spc6bf93[$sp5cab35] = \App\System::_get($sp5cab35); } foreach ($sp65da9a as $sp5cab35) { $spc6bf93[$sp5cab35] = (int) \App\System::_get($sp5cab35); } return Response::success($spc6bf93); } $this->set($spf631e6, $spd3048b); $this->setInt($spf631e6, $sp65da9a); return Response::success(); } function email(Request $spf631e6) { $spd3048b = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp65da9a = array('mail_send_order'); if ($spf631e6->isMethod('GET')) { $spc6bf93 = array(); foreach ($spd3048b as $sp5cab35) { $spc6bf93[$sp5cab35] = \App\System::_get($sp5cab35); } foreach ($sp65da9a as $sp5cab35) { $spc6bf93[$sp5cab35] = (int) \App\System::_get($sp5cab35); } return Response::success($spc6bf93); } $this->set($spf631e6, $spd3048b); $this->setInt($spf631e6, $sp65da9a); return Response::success(); } function storage(Request $spf631e6) { $spd3048b = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp65da9a = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($spf631e6->isMethod('GET')) { $spc6bf93 = array(); foreach ($spd3048b as $sp5cab35) { $spc6bf93[$sp5cab35] = \App\System::_get($sp5cab35); } foreach ($sp65da9a as $sp5cab35) { $spc6bf93[$sp5cab35] = (int) \App\System::_get($sp5cab35); } return Response::success($spc6bf93); } $this->set($spf631e6, $spd3048b); $this->set($spf631e6, $sp65da9a); return Response::success(); } function emailTest(Request $spf631e6) { $this->validate($spf631e6, array('to' => 'required')); $sp506439 = $spf631e6->post('to'); try { $sp567373 = \Mail::to($sp506439)->send(new \App\Mail\Test()); return Response::success($sp567373); } catch (\Exception $sp019ea9) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $sp019ea9->getMessage()); return Response::fail($sp019ea9->getMessage(), $sp019ea9); } } function orderClean(Request $spf631e6) { $this->validate($spf631e6, array('day' => 'required|integer|min:1')); $spe6a0a5 = (int) $spf631e6->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$spe6a0a5))->delete(); return Response::success(); } }