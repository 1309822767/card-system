<?php
namespace App; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Eloquent\SoftDeletes; use Illuminate\Support\Facades\DB; class Card extends Model { protected $guarded = array(); use SoftDeletes; protected $dates = array('deleted_at'); const STATUS_NORMAL = 0; const STATUS_SOLD = 1; const STATUS_USED = 2; const TYPE_ONETIME = 0; const TYPE_REPEAT = 1; function orders() { return $this->hasMany(Order::class); } function product() { return $this->belongsTo(Product::class); } public static function add_cards($sp9f2e5e, $spcf7e6d, $sp8f02bb, $spf9795c, $sp3567f3, $spf0cff1) { DB::statement('call add_cards(?,?,?,?,?,?)', array($sp9f2e5e, $spcf7e6d, $sp8f02bb, $spf9795c, $sp3567f3, (int) $spf0cff1)); } public static function _trash($sp7a245d) { DB::transaction(function () use($sp7a245d) { $sp98304c = clone $sp7a245d; $sp98304c->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp8a1187) { foreach ($sp8a1187 as $sp02a3d4) { $spdbee16 = \App\Product::where('id', $sp02a3d4->product_id)->lockForUpdate()->first(); if ($spdbee16) { $spdbee16->count_all -= $sp02a3d4->count_left; $spdbee16->saveOrFail(); } } }); $sp7a245d->delete(); return true; }); } public static function _restore($sp7a245d) { DB::transaction(function () use($sp7a245d) { $sp98304c = clone $sp7a245d; $sp98304c->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp8a1187) { foreach ($sp8a1187 as $sp02a3d4) { $spdbee16 = \App\Product::where('id', $sp02a3d4->product_id)->lockForUpdate()->first(); if ($spdbee16) { $spdbee16->count_all += $sp02a3d4->count_left; $spdbee16->saveOrFail(); } } }); $sp7a245d->restore(); return true; }); } }